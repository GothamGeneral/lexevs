<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL MAP 2.0//EN" 
	"http://www.ibatis.com/dtd/sql-map-2.dtd">
<sqlMap namespace="Entity">

	<typeAlias alias="entity" type="org.LexGrid.concepts.Entity" />
	<typeAlias alias="associationEntity" type="org.LexGrid.relations.AssociationEntity" />

	<resultMap id="entityResult" class="entity" groupBy="entityCode,entityCodeNamespace">
<!--		<result property="entityId" column="entityGuid" />-->
<!--		<result property="codingSchemeId" column="codingSchemeGuid" />-->
		<result property="entityCode" column="entityCode" />
		<result property="entityCodeNamespace" column="entityCodeNamespace" />
		<result property="entityDescription.content" column="description" />
		<result property="_entityTypeList" resultMap="Entity.entityTypeResult"/>
		<discriminator javaType="string" column="entityType">
			<subMap value="association" resultMap="Entity.associationEntityResult" />
		</discriminator>
	</resultMap>
	
	<resultMap id="associationEntityResult" class="associationEntity" extends="entityResult">
		<result property="forwardName" column="forwardName" />
		<result property="reverseName" column="reverseName" />
		<result property="isNavigable" column="isNavigable" />
		<result property="isTransitive" column="isTransitive" />
	</resultMap>
	
	<sql id="getEntityFragment">
		SELECT
			entity.codingSchemeGuid,
			entity.entityGuid,
			entity.entityCode,
			entity.entityCodeNamespace,
			entity.description,
			entityType.entityType,
			associationEntity.forwardName,
			associationEntity.reverseName,
			associationEntity.isNavigable,
			associationEntity.isTransitive
		FROM
			$prefix$entity entity
			
		LEFT JOIN
			$prefix$entityType entityType
		ON
			entity.entityGuid =
			entityType.entityGuid
				
		LEFT JOIN
			$prefix$associationEntity associationEntity
		ON
			entity.entityGuid =
			associationEntity.entityGuid
			
		LEFT JOIN
			${defaultPrefix}entryState entryState
		ON
			entity.entryStateGuid =
			entryState.entryStateGuid		
	</sql>
	
	<sql id="getHistoryEntityFragment">
		SELECT
			entity.codingSchemeGuid,
			entity.entityGuid,
			entity.entityCode,
			entity.entityCodeNamespace,
			entity.description,
			entityType.entityType
		FROM
			$prefix$h_entity entity
		LEFT JOIN
			$prefix$entityType entityType
		ON
			entity.entityGuid =
			entityType.entityGuid
		LEFT JOIN
			$prefix$entryState entryState
		ON
			entity.entryStateGuid =
			entryState.entryStateGuid		
	</sql>
	
	<select id="getEntityCount" parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" resultClass="int">
		SELECT
			COUNT(entityGuid)
		FROM
			$prefix$entity entity
		WHERE
			entity.codingSchemeGuid = #param1#
     </select>


	<select id="getEntityIdByCodeAndNamespace" parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTriple" resultClass="string">
		SELECT
			entityGuid
		FROM
			$prefix$entity entity
		WHERE
			codingSchemeGuid = #param1#
		AND
			entity.entityCode = #param2#
		AND
			entity.entityCodeNamespace = #param3#
     </select>
     
     <select id="getEntityById" parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple" resultMap="Entity.entityResult">
		<include refid="getEntityFragment"/>
		WHERE
			entity.entityGuid = #param1#
		AND
			entity.codingSchemeGuid = #param2#
     </select>
     
	<select id="getEntityByCodeAndNamespace" parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple" resultMap="Entity.entityResult">
		<include refid="getEntityFragment"/>
		WHERE
			entityCode = #param1#
		AND
			entity.entityCodeNamespace = #param2#
     </select>
     
    <select id="getEntityByIdAndRevisionId" parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple" resultMap="Entity.entityResult">
		<include refid="getHistoryEntityFragment"/>
		WHERE
			entity.entityGuid = #param1#
		AND
			entryState.revisionGuid = #param2#
     </select>
     
     <select id="getAllEntitiesOfCodingScheme" parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" 
     	resultMap="Entity.entityResult">
		<include refid="getEntityFragment"/>
		WHERE
			entity.codingSchemeGuid = #param1#
     </select>
     
     <insert id="insertEntity" parameterClass="org.lexevs.dao.database.ibatis.entity.parameter.InsertOrUpdateEntityBean">
		INSERT INTO $prefix$entity (
			entityGuid,
			codingSchemeGuid,
			entityCode,
			entityCodeNamespace,
			isDefined,
			isAnonymous,
			isActive,
			description,
			owner,
			status,
			effectiveDate,
			expirationDate,
			entryStateGuid
		) VALUES (
			#id#, 
			#codingSchemeId#,
			#entity.entityCode#, 
			#entity.entityCodeNamespace#, 
			#entity.isDefined#,
			#entity.isAnonymous#,
			#entity.isActive#,
			#entity.entityDescription.content#,
			#entity.owner#,
			#entity.status#,
			#entity.effectiveDate#,
			#entity.expirationDate#,
			#entryStateId#
		)
  </insert>
  
  <update id="updateEntityById" parameterClass="org.lexevs.dao.database.ibatis.entity.parameter.InsertOrUpdateEntityBean">
		UPDATE 
			$prefix$entity entity
		SET 
   		  <dynamic prepend=" ">
			<isNotNull prepend="," property="entity.entityCode">
				entityCode = #entity.entityCode#
			</isNotNull>
			<isNotNull prepend="," property="entity.entityCodeNamespace">
				entityCodeNamespace = #entity.entityCodeNamespace#
			</isNotNull>
			<isNotNull prepend="," property="entity.isDefined">
				isDefined = #entity.isDefined#
			</isNotNull>
			<isNotNull prepend="," property="entity.isAnonymous">
				isAnonymous = #entity.isAnonymous#
			</isNotNull>
			<isNotNull prepend="," property="entity.entityDescription.content">
				description = #entity.entityDescription.content#
			</isNotNull>
			<isNotNull prepend="," property="entity.isActive">
				isActive = #entity.isActive#
			</isNotNull>
			<isNotNull prepend="," property="entity.owner">
				owner = #entity.owner#
			</isNotNull>
			<isNotNull prepend="," property="entity.status">
				status = #entity.status#
			</isNotNull>
			<isNotNull prepend="," property="entity.effectiveDate">
				effectiveDate = #entity.effectiveDate#
			</isNotNull>
			<isNotNull prepend="," property="entity.expirationDate">
				expirationDate = #entity.expirationDate#
			</isNotNull>
		</dynamic>

		WHERE 
			entity.entityGuid = #id#
		AND
			entity.codingSchemeGuid = #codingSchemeId#
 	</update>
    
</sqlMap>