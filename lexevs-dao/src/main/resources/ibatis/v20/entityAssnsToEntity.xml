<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL MAP 2.0//EN" 
	"http://www.ibatis.com/dtd/sql-map-2.dtd">
<sqlMap namespace="Association">

	<typeAlias alias="node" type="org.lexevs.dao.database.access.association.model.Node"/>
	<typeAlias alias="triple" type="org.lexevs.dao.database.access.association.model.Triple"/>
	<typeAlias alias="associatedConcept" type="org.lexevs.dao.database.ibatis.codednodegraph.model.QualifierAddingAssociatedConcept"/>
	<typeAlias alias="associationQualification" type="org.LexGrid.LexBIG.DataModel.Core.NameAndValue"/>

	<resultMap id="nodeResult" class="node">
		<result property="entityCode" column="entityCode" />
		<result property="entityCodeNamespace" column="entityCodeNamespace" />
	</resultMap>
	
	<resultMap id="tripleResult" class="triple">
		<result property="sourceEntityCode" column="sourceEntityCode" />
		<result property="sourceEntityNamespace" column="sourceEntityCodeNamespace" />
		<result property="targetEntityCode" column="targetEntityCode" />
		<result property="targetEntityNamespace" column="targetEntityCodeNamespace" />
		<result property="associationPredicateId" column="associationPredicateGuid" />
	</resultMap>
	
	<resultMap id="associatedConceptResult" class="associatedConcept" groupBy="guid">
		<result property="guid" column="entityAssnsGuid" />
		<result property="code" column="entityCode" />
		<result property="codeNamespace" column="entityCodeNamespace" />
		<result property="entityDescription.content" column="description" />
		<result property="codingSchemeURI" column="codingSchemeURI" />
		<result property="codingSchemeVersion" column="representsVersion" />
		<result property="codingSchemeName" column="codingSchemeName" />
		<result property="associationQualification" resultMap="Association.associationQualificationResult"/>
	</resultMap>

	<resultMap id="associationQualificationResult" class="associationQualification">
		<result property="name" column="qualifierName" />
		<result property="content" column="qualifierValue" />
	</resultMap>
	
	<select id="getAssociatedConcpetFromEntityAssnsToEntityUid" 
		parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterCollection"
		remapResults="true" resultMap="Association.associatedConceptResult">
		SELECT
			eate.entityAssnsGuid,
			entity.description,
			codingScheme.codingSchemeURI,
			codingScheme.representsVersion,
			codingScheme.codingSchemeName,
			<isEqual property="param1" compareValue="SUBJECT">
				eate.sourceEntityCode as entityCode,
				eate.sourceEntityCodeNamespace as entityCodeNamespace,
			</isEqual>
			<isEqual property="param1" compareValue="OBJECT">
				eate.targetEntityCode as entityCode,
				eate.targetEntityCodeNamespace as entityCodeNamespace,
			</isEqual>
			quals.qualifierName,
			quals.qualifierValue
		FROM
			$prefix$entityAssnsToEntity eate
		LEFT JOIN
			$prefix$entity entity
		ON (
			<isEqual property="param1" compareValue="SUBJECT">
				eate.sourceEntityCode = entity.entityCode
				AND
				eate.sourceEntityCodeNamespace = entity.entityCodeNamespace
			</isEqual>
			<isEqual property="param1" compareValue="OBJECT">
				eate.targetEntityCode = entity.entityCode
				AND
				eate.targetEntityCodeNamespace = entity.entityCodeNamespace
			</isEqual>
			)
		LEFT JOIN
			$prefix$codingScheme codingScheme
		ON (entity.codingSchemeGuid = codingScheme.codingSchemeGuid)
		
		LEFT JOIN
			$prefix$entityAssnQuals quals
		ON (eate.entityAssnsGuid = quals.referenceGuid)
		
		WHERE
			eate.entityAssnsGuid IN ( <iterate property="param2" conjunction=",">#param2[]#</iterate> )
	</select>

	<select id="getAccociationInstanceKey" remapResults="true" resultClass="string">
		SELECT
			eae.entityAssnsGuid
		FROM 
			$prefix$entityAssnsToEntity eae
		JOIN
			$prefix$associationPredicate ap
		ON 
			eae.associationPredicateGuid =
			ap.associationPredicateGuid
		JOIN
			$prefix$relation rel
		ON
			ap.relationGuid =
			rel.relationGuid
		WHERE
			rel.codingSchemeGuid = 
			#param1#
		AND
			eae.associationInstanceId = 
			#param2#
	</select>
	
	<select id="getAllTriplesOfCodingScheme" remapResults="true"
		parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple" resultMap="Association.tripleResult">
		SELECT
			eae.sourceEntityCode,
			eae.sourceEntityCodeNamespace,
			eae.targetEntityCode,
			eae.targetEntityCodeNamespace,
			eae.associationPredicateGuid
		FROM 
			$prefix$entityAssnsToEntity eae
		JOIN
			$prefix$associationPredicate ap
		ON 
			eae.associationPredicateGuid =
			ap.associationPredicateGuid
		JOIN
			$prefix$relation rel
		ON
			ap.relationGuid =
			rel.relationGuid
		WHERE
			rel.codingSchemeGuid = 
			#param1#
		AND
			eae.associationPredicateGuid =
			#param2#	
	</select>
	
     <insert id="insertEntityAssnsToEntity" parameterClass="org.lexevs.dao.database.ibatis.association.parameter.InsertAssociationSourceBean">
		INSERT INTO $prefix$entityAssnsToEntity (
			entityAssnsGuid,
			associationPredicateGuid,
			sourceEntityCode,
			sourceEntityCodeNamespace,
			targetEntityCode,
			targetEntityCodeNamespace,
			associationInstanceId,
			isDefining,
			isInferred,
			isActive,
			owner,
			status,
			effectiveDate,
			expirationDate,
			entryStateGuid
		) VALUES (
			#uid#, 
			#associationPredicateUId#,
			#associationSource.sourceEntityCode#, 
			#associationSource.sourceEntityCodeNamespace#, 
			#associationTarget.targetEntityCode#, 
			#associationTarget.targetEntityCodeNamespace#, 
			#associationTarget.associationInstanceId#, 
			#associationTarget.isDefining#, 
			#associationTarget.isInferred#, 
			#associationTarget.isActive#,
			#associationTarget.owner#,
			#associationTarget.status#,
			#associationTarget.effectiveDate#,
			#associationTarget.expirationDate#,
			#entryStateUId#
		)
  </insert>
  
   <insert id="insertTransitiveClosure" parameterClass="org.lexevs.dao.database.ibatis.association.parameter.InsertTransitiveClosureBean">
		INSERT INTO $prefix$entityAssnsToEntityTr (
			entityAssnsTrGuid,
			associationPredicateGuid,
			sourceEntityCode,
			sourceEntityCodeNamespace,
			targetEntityCode,
			targetEntityCodeNamespace
		) VALUES (
			#uid#, 
			#associationPredicateUId#,
			#sourceEntityCode#, 
			#sourceEntityCodeNamespace#, 
			#targetEntityCode#, 
			#targetEntityCodeNamespace#
		)
  </insert>
  
  <sql id="getEntityAssnsToEntityUidsFragment">
	FROM
		$prefix$entityAssnsToEntity eate
	INNER JOIN
		$prefix$associationPredicate ap
	ON
		(ap.associationPredicateGuid = eate.associationPredicateGuid)
	INNER JOIN
		$prefix$relation rel
	ON
		(rel.relationGuid = ap.relationGuid)
	LEFT JOIN
		$prefix$entityAssnQuals quals
	ON
		(eate.entityAssnsGuid = quals.referenceGuid)
	WHERE
		rel.codingSchemeGuid = #codingSchemeUid#
	AND
		ap.associationPredicateGuid = #associationPredicateUid#

	<isNotEmpty property="associationQualifiers" prepend="AND">
		<iterate property="associationQualifiers" conjunction="AND">
			(
			quals.qualifierName = #associationQualifiers[].qualifierName#
			<isNotEmpty property="associationQualifiers[].qualifierValue">
				AND
				quals.qualifierValue = #associationQualifiers[].qualifierValue#
			</isNotEmpty>
			)
		</iterate>
	</isNotEmpty>
	
		AND
			<isEqual property="tripleNode" compareValue="SUBJECT"> 
				eate.sourceEntityCode = #entityCode#
				AND
				eate.sourceEntityCodeNamespace = #entityCodeNamespace#
			</isEqual>
			<isEqual property="tripleNode" compareValue="OBJECT"> 
				eate.targetEntityCode = #entityCode#
				AND
				eate.targetEntityCodeNamespace = #entityCodeNamespace#
			</isEqual>
			
		<isNotEmpty property="mustHaveCodes" prepend="AND">
			<iterate property="mustHaveCodes" conjunction="OR">
				<isEqual property="tripleNode" compareValue="SUBJECT"> 
				(
					eate.targetEntityCode = #mustHaveCodes[].code#
					AND
					eate.targetEntityCodeNamespace = #mustHaveCodes[].namespace#
				)
				</isEqual>
				<isEqual property="tripleNode" compareValue="OBJECT"> 
				(
					eate.sourceEntityCode = #mustHaveCodes[].code#
					AND
					eate.sourceEntityCodeNamespace = #mustHaveCodes[].namespace#
				)
				</isEqual>
			</iterate>
		</isNotEmpty>
  </sql>
  
  	<select id="getEntityAssnsToEntityUids"
				parameterClass="org.lexevs.dao.database.ibatis.association.parameter.GetEntityAssnUidsBean"
				resultClass="string">
		SELECT DISTINCT 
			(eate.entityAssnsGuid)
		<include refid="getEntityAssnsToEntityUidsFragment"/>
	</select>
	
	<select id="getEntityAssnsToEntityUidsCount"
				parameterClass="org.lexevs.dao.database.ibatis.association.parameter.GetEntityAssnUidsBean"
				resultClass="int">
		SELECT COUNT(DISTINCT 
			(eate.entityAssnsGuid))
		<include refid="getEntityAssnsToEntityUidsFragment"/>
	</select>
	
	<select id="getDistinctSources" 
		parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter"
		remapResults="true" 
		resultMap="nodeResult">
		SELECT DISTINCT
			sourceEntityCode AS entityCode,
			sourceEntityCodeNamespace AS entityCodeNamespace
		FROM 
			$prefix$entityAssnsToEntity
		WHERE
			associationPredicateGuid = #param1#
	</select>
	
	<select id="getTargetsOfSource" 
		parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTriple"
		remapResults="true" 
		resultMap="nodeResult">
		SELECT
			targetEntityCode AS entityCode,
			targetEntityCodeNamespace AS entityCodeNamespace
		FROM 
			$prefix$entityAssnsToEntity
		WHERE
			associationPredicateGuid = #param1#
		AND
			sourceEntityCode = #param2#
		AND
			sourceEntityCodeNamespace = #param3#		
	</select>
    
</sqlMap>