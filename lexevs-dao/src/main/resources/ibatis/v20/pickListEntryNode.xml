<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL MAP 2.0//EN" 
	"http://www.ibatis.com/dtd/sql-map-2.dtd">
<sqlMap namespace="PickListEntryNode">

	<typeAlias alias="pickListEntryNodeBean" type="org.lexevs.dao.database.ibatis.valuesets.parameter.PickListEntryNodeBean" />
	<typeAlias alias="insertOrUpdatePickListEntryNodeBean" type="org.lexevs.dao.database.ibatis.valuesets.parameter.InsertOrUpdatePickListEntryBean" />
	<typeAlias alias="pickListEntryExclusion" type="org.LexGrid.valueSets.PickListEntryExclusion" />
	<typeAlias alias="pickListEntry" type="org.LexGrid.valueSets.PickListEntry" />	

	<resultMap  id="pickListEntryNodeBeanResult" class="pickListEntryNodeBean">
		<result property="vsPLEntryGuid" column="vsPLEntryGuid"/>
		<result property="pickListEntryId" column="plEntryId"/>
		<result property="include" column="include" />
		<result property="isActive" column="isActive" />
		<result property="owner" column="owner" />
		<result property="status" column="status" />
		<result property="effectiveDate" column="effectiveDate" />
		<result property="expirationDate" column="expirationDate" />
		<result property="pickListEntry" resultMap="PickListEntryNode.pickListEntryResult"/>		
		<result property="pickListEntryExclusion" resultMap="PickListEntryNode.pickListExclusionResult"/>
		<result property="entryStateUId" column="entryStateGuid"/>
	</resultMap>
	
	<resultMap  id="pickListEntryNodeMetaDataWithMultiAttrib" class="insertOrUpdatePickListEntryNodeBean" groupBy="uid">
		<result property="uid" column="vsPLEntryGuid"/>
		<result property="pickListUId" column="vsPickListGuid"/>
		<result property="pickListEntryNode.pickListEntryId" column="plEntryId"/>
		<result property="entityCodeNamespace" column="entityCodeNamespace"/>
		<result property="entityCode" column="entityCode"/>
		<result property="entryOrder" column="entryOrder"/>
		<result property="isDefault" column="isDefault"/>
		<result property="matchIfNoContext" column="matchIfNoContext"/>
		<result property="propertyId" column="propertyId"/>
		<result property="langauage" column="language"/>
		<result property="include" column="include" />
		<result property="pickText" column="pickText"/>
		<result property="pickListEntryNode.isActive" column="isActive" />
		<result property="pickListEntryNode.owner" column="owner" />
		<result property="pickListEntryNode.status" column="status" />
		<result property="pickListEntryNode.effectiveDate" column="effectiveDate" />
		<result property="pickListEntryNode.expirationDate" column="expirationDate" />
		<result property="entryStateUId" column="entryStateGuid"/>
		<result property="vsMultiAttribList" resultMap="VSMultiAttrib.vsMultiAttribResultBean"/>
	</resultMap>

	<resultMap  id="pickListEntryNodeMetaData" class="insertOrUpdatePickListEntryNodeBean" groupBy="uid">
		<result property="uid" column="vsPLEntryGuid"/>
		<result property="pickListUId" column="vsPickListGuid"/>
		<result property="pickListEntryNode.pickListEntryId" column="plEntryId"/>
		<result property="entityCodeNamespace" column="entityCodeNamespace"/>
		<result property="entityCode" column="entityCode"/>
		<result property="entryOrder" column="entryOrder"/>
		<result property="isDefault" column="isDefault"/>
		<result property="matchIfNoContext" column="matchIfNoContext"/>
		<result property="propertyId" column="propertyId"/>
		<result property="langauage" column="language"/>
		<result property="include" column="include" />
		<result property="pickText" column="pickText"/>
		<result property="pickListEntryNode.isActive" column="isActive" />
		<result property="pickListEntryNode.owner" column="owner" />
		<result property="pickListEntryNode.status" column="status" />
		<result property="pickListEntryNode.effectiveDate" column="effectiveDate" />
		<result property="pickListEntryNode.expirationDate" column="expirationDate" />
		<result property="entryStateUId" column="entryStateGuid"/>
	</resultMap>
		
	<resultMap  id="pickListEntryResult" class="pickListEntry">
		<result property="entityCode" column="entityCode"/>
		<result property="entityCodeNamespace" column="entityCodeNamespace"/>
		<result property="entryOrder" column="entryOrder"/>
		<result property="propertyId" column="propertyId"/>
		<result property="isDefault" column="isDefault"/>
		<result property="matchIfNoContext" column="matchIfNoContext"/>
		<result property="language" column="language"/>
		<result property="pickText" column="pickText"/>
	</resultMap>
	
	<resultMap  id="pickListExclusionResult" class="pickListEntryExclusion">
		<result property="entityCode" column="entityCode"/>
		<result property="entityCodeNamespace" column="entityCodeNamespace"/>
	</resultMap>
	
    <insert id="insertPickListEntry" 
	parameterClass="org.lexevs.dao.database.ibatis.valuesets.parameter.InsertOrUpdatePickListEntryBean">
	INSERT INTO $prefix$vsPLEntry
	(
			vsPLEntryGuid,
			vsPickListGuid,
			plEntryId,
			entityCodeNamespace,
			entityCode,
			entryOrder,
			isDefault,
			matchIfNoContext,
			propertyId,
			include,
			pickText,
			isActive,
			owner,
			status,
			effectiveDate,
			expirationDate,
			entryStateGuid
		) VALUES (
			#uid#,
			#pickListUId#,
			#pickListEntryNode.pickListEntryId#,
			#entityCodeNamespace#,
			#entityCode#,
			#entryOrder#,
			
			<isPropertyAvailable property="isDefault">
				#isDefault#,
			</isPropertyAvailable>
			<isNotPropertyAvailable property="isDefault">
				null,
			</isNotPropertyAvailable>
			
			<isPropertyAvailable property="matchIfNoContext">
				#matchIfNoContext#,
			</isPropertyAvailable>
			<isNotPropertyAvailable property="matchIfNoContext">
				null,
			</isNotPropertyAvailable>
			
			#propertyId#,
			
			<isPropertyAvailable property="include">
				#include#,
			</isPropertyAvailable>
			<isNotPropertyAvailable property="include">
				null,
			</isNotPropertyAvailable>
			
			#pickText#,
			
			<isPropertyAvailable property="pickListEntryNode.isActive">
				#pickListEntryNode.isActive#,
			</isPropertyAvailable>
			<isNotPropertyAvailable property="pickListEntryNode.isActive">
				null,
			</isNotPropertyAvailable>
			
			#pickListEntryNode.owner#,
			#pickListEntryNode.status#,
			#pickListEntryNode.effectiveDate#,
			#pickListEntryNode.expirationDate#,
			#entryStateUId#	
		)
    </insert>
     
	<select id="getPickListEntryNodeUIdByPickListIdAndEntryNodeId" 
		parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple" 
		resultClass="string">
		SELECT
			plEntry.vsPLEntryGuid
		FROM
			$prefix$vsPickList pickList,
			$prefix$vsPLEntry plEntry
		WHERE
			pickList.pickListId = #param1#
		AND	
			pickList.vsPickListGuid = plEntry.vsPickListGuid
		AND
			plEntry.plEntryId = #param2#	
	</select>
	
	<select id="getPickListEntryNodeBeanByPickListGuid" 
		resultMap="pickListEntryNodeBeanResult" 
		parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter">
		SELECT
			vsPLEntryGuid,
			plEntryId,
			entityCodeNamespace,
			entityCode,
			entryOrder,
			isDefault,
			matchIfNoContext,
			propertyId,
			language,
			include,
			pickText,
			isActive,
			owner,
			status,
			effectiveDate,
			expirationDate,
			entryStateGuid
		FROM
			$prefix$vsPLEntry
		WHERE
			vsPickListGuid = #param1#
		ORDER BY entryOrder
     </select>

	<select id="getPickListEntryNodeMeatDataByPLEntryGuid" 
	resultMap="pickListEntryNodeMetaDataWithMultiAttrib" 
	parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter">
		SELECT
			plEntry.vsPLEntryGuid,
			plEntry.vsPickListGuid,
			plEntry.plEntryId,
			plEntry.entityCodeNamespace,
			plEntry.entityCode,
			plEntry.entryOrder,
			plEntry.isDefault,
			plEntry.matchIfNoContext,
			plEntry.propertyId,
			plEntry.language,
			plEntry.include,
			plEntry.pickText,
			plEntry.isActive,
			plEntry.owner,
			plEntry.status,
			plEntry.effectiveDate,
			plEntry.expirationDate,
			plEntry.entryStateGuid,
			vsMulti.vsMultiAttribGuid,
			vsMulti.referenceGuid,
			vsMulti.referenceType,
			vsMulti.attributeType,
			vsMulti.attributeValue,
			vsMulti.subRef,
			vsMulti.role,
			vsMulti.entryStateGuid esGuid				
		FROM
			$prefix$vsPLEntry plEntry
		LEFT JOIN
			$prefix$vsMultiAttrib vsMulti
		ON
			vsMulti.referenceGuid = plEntry.vsPLEntryGuid
		WHERE
			plEntry.vsPLEntryGuid = #param1#
    </select>

	<update id="updatePickListEntryNodeByUId" parameterClass="org.lexevs.dao.database.ibatis.valuesets.parameter.InsertOrUpdatePickListEntryBean">
		UPDATE 
			$prefix$vsPLEntry plEntry
		SET 
   		  <dynamic prepend=" ">
			<isNotNull prepend="," property="entityCode">
				entityCode = #entityCode#
			</isNotNull>
			<isNotNull prepend="," property="entityCodeNamespace">
				entityCodeNamespace = #entityCodeNamespace#
			</isNotNull>
			<isNotNull prepend="," property="entryOrder">
				entryOrder = #entryOrder#
			</isNotNull>
			<isNotNull prepend="," property="isDefault">
				isDefault = #isDefault#
			</isNotNull>
			<isNotNull prepend="," property="matchIfNoContext">
				matchIfNoContext = #matchIfNoContext#
			</isNotNull>
			<isNotNull prepend="," property="propertyId">
				propertyId = #propertyId#
			</isNotNull>
			<isNotNull prepend="," property="langauage">
				language = #langauage#
			</isNotNull>
			<isNotNull prepend="," property="include">
				include = #include#
			</isNotNull>
			<isNotNull prepend="," property="pickText">
				pickText = #pickText#
			</isNotNull>												
			<isNotNull prepend="," property="entryStateUId">
				entryStateGuid = #entryStateUId#
			</isNotNull>
		</dynamic>

		WHERE 
			plEntry.vsPLEntryGuid = #uid#
 	</update>

	<update id="updatePickListEntryNodeVerAttribByUId" parameterClass="org.lexevs.dao.database.ibatis.valuesets.parameter.InsertOrUpdatePickListEntryBean">
		UPDATE 
			$prefix$vsPLEntry plEntry
		SET 
   		  <dynamic prepend=" ">
			<isNotNull prepend="," property="pickListEntryNode.isActive">
				isActive = #pickListEntryNode.isActive#
			</isNotNull>
			<isNotNull prepend="," property="pickListEntryNode.owner">
				owner = #pickListEntryNode.owner#
			</isNotNull>
			<isNotNull prepend="," property="pickListEntryNode.status">
				status = #pickListEntryNode.status#
			</isNotNull>
			<isNotNull prepend="," property="pickListEntryNode.effectiveDate">
				effectiveDate = #pickListEntryNode.effectiveDate#
			</isNotNull>
			<isNotNull prepend="," property="pickListEntryNode.expirationDate">
				expirationDate = #pickListEntryNode.expirationDate#
			</isNotNull>
			<isNotNull prepend="," property="entryStateUId">
				entryStateGuid = #entryStateUId#
			</isNotNull>
		</dynamic>

		WHERE 
			plEntry.vsPLEntryGuid = #uid#
 	</update>

	<select id="getEntryStateUIdByPickListEntryNodeUId" remapResults="true"
		parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter"
		resultClass="string">
		SELECT 
			entryStateGuid
		FROM
			$prefix$vsPLEntry plEntry
		WHERE
			plEntry.vsPLEntryGuid = #param1#	
	</select>
	
	<update id="updateEntryStateUIdByPickListEntryUId" 
		parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple">
		UPDATE
			$prefix$vsPLEntry
		SET
			entryStateGuid = #param2#
		WHERE 
			vsPLEntryGuid = #param1#
 	</update>

	<select id="getPickListEntryNodeLatestRevisionIdByUId" remapResults="true"
		parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter"
		resultClass="string">
		SELECT 
			rev.revisionId
		FROM
			$prefix$vsPLEntry plEntry,
			$prefix$vsEntryState es,
			${defaultPrefix}revision rev
		WHERE
			plEntry.vsPLEntryGuid = #param1#	
		AND
			plEntry.entryStateGuid = es.entryStateGuid	
		AND
			es.revisionGuid = rev.revisionGuid	
	</select>

	<delete id="deletePickListEntryNodeByUId"
		parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple">
		DELETE FROM
			$prefix$vsPLEntry
		WHERE
			vsPLEntryGuid = #param1#
	</delete>

	<select id="getPrevRevIdFromGivenRevIdForPLEntry" remapResults="true"
		parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple"
		resultClass="java.util.TreeMap">
		<![CDATA[
			SELECT DISTINCT
				r1.revisionId AS revId,
				r1.revAppliedDate AS revAppliedDate
			FROM
				$prefix$vsPLEntry plEntry,
				$prefix$vsEntryState es,
				${defaultPrefix}revision r1, 
				${defaultPrefix}revision r2			
			WHERE
				plEntry.plEntryGuid = #param1# AND
				(
					NOT EXISTS 
					(
						SELECT 
							es1.entryStateGuid 
						FROM 
							$prefix$vsEntryState es1 
						WHERE 
							plEntry.entryStateGuid = es1.entryStateGuid
					)
					OR
					(
						plEntry.vsPLEntryGuid = es.entryGuid AND 
						es.revisionGuid = r1.revisionGuid AND
						r1.revAppliedDate <= r2.revAppliedDate AND
						r2.revisionID = #param2#
					)
				)
			ORDER BY
				revAppliedDate DESC			
			LIMIT 1
		]]>			
	</select>	
	
	<select id="getPickListEntryMetaDataByRevision" remapResults="true"
		parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple"
		resultMap="pickListEntryNodeMetaData">
		<![CDATA[
			SELECT 
				plEntry.vsPLEntryGuid,
				plEntry.vsPickListGuid,
				plEntry.plEntryId,
				plEntry.entityCodeNamespace,
				plEntry.entityCode,
				plEntry.entryOrder,
				plEntry.isDefault,
				plEntry.matchIfNoContext,
				plEntry.propertyId,
				plEntry.language,
				plEntry.include,
				plEntry.pickText,
				plEntry.isActive,
				plEntry.owner,
				plEntry.status,
				plEntry.effectiveDate,
				plEntry.expirationDate,
				plEntry.entryStateGuid,
				r1.revAppliedDate revAppliedDate
			FROM
				$prefix$vsPLEntry plEntry,
				$prefix$vsEntryState es,
				${defaultPrefix}revision r1,			
				${defaultPrefix}revision r2		
			WHERE
				plEntry.vsPLEntryGuid = #param1# AND
				plEntry.entryStateGuid = es.entryStateGuid AND
				es.revisionGuid = r1.revisionGuid AND
				r1.revAppliedDate <= r2.revAppliedDate AND
				r2.revisionID = #param2#
			ORDER BY
				revAppliedDate DESC		
			LIMIT 1	
		]]>			
	</select>
	
	<select id="getPickListEntryMetaDataHistoryByRevision" remapResults="true"
		parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple"
		resultMap="pickListEntryNodeMetaData">
		<![CDATA[
			SELECT 
				plEntry.vsPLEntryGuid,
				plEntry.vsPickListGuid,
				plEntry.plEntryId,
				plEntry.entityCodeNamespace,
				plEntry.entityCode,
				plEntry.entryOrder,
				plEntry.isDefault,
				plEntry.matchIfNoContext,
				plEntry.propertyId,
				plEntry.language,
				plEntry.include,
				plEntry.pickText,
				plEntry.isActive,
				plEntry.owner,
				plEntry.status,
				plEntry.effectiveDate,
				plEntry.expirationDate,
				plEntry.entryStateGuid,
				r1.revAppliedDate revAppliedDate
			FROM
				$prefix$h_vsPLEntry plEntry,
				$prefix$vsEntryState es,
				${defaultPrefix}revision r1,			
				${defaultPrefix}revision r2		
			WHERE
				plEntry.vsPLEntryGuid = #param1# AND
				plEntry.entryStateGuid = es.entryStateGuid AND
				es.revisionGuid = r1.revisionGuid AND
				r1.revAppliedDate <= r2.revAppliedDate AND
				r2.revisionID = #param2#
			ORDER BY
				revAppliedDate DESC		
			LIMIT 1	
		]]>			
	</select>
	
	<select id="getEntryNodePropertyIdsListByEntryNodeUId" remapResults="true"
		parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple"
		resultClass="string">
			SELECT
				propertyId
			FROM
				$prefix$vsProperty
			WHERE
				referenceGuid = #param1#
			AND
				referenceType = #param2#
	</select>
	
</sqlMap>