<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/batch"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd">

	<beans:import resource="repositories.xml" />
    <beans:import resource="rxnCommonBeans.xml"/>

	<beans:bean class="org.springframework.batch.core.scope.StepScope" />

	<beans:bean id="rxnconsoReader"
		class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
		<beans:property name="resource" value="${rrfDir}/RXNCONSO.RRF" />
		<beans:property name="lineMapper">
			<beans:bean
				class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<beans:property name="lineTokenizer">
					<beans:ref local="pipeTokenizer" />
				</beans:property>
				<beans:property name="fieldSetMapper">
					<beans:bean
						class="org.lexgrid.loader.rrf.fieldmapper.MrconsoFieldSetMapper" />
				</beans:property>
			</beans:bean>
		</beans:property>
		<beans:property name="saveState" value="true" />
		<beans:property name="encoding" value="UTF8" />
	</beans:bean>

	<beans:bean id="rxnhierReader"
		class="org.springframework.batch.item.file.FlatFileItemReader">
		<beans:property name="resource" value="${rrfDir}/RXNHIER.RRF" />
		<beans:property name="lineMapper">
			<beans:bean
				class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<beans:property name="lineTokenizer">
					<beans:ref local="pipeTokenizer" />
				</beans:property>
				<beans:property name="fieldSetMapper">
					<beans:bean
						class="org.lexgrid.loader.rrf.fieldmapper.MrhierFieldSetMapper" />
				</beans:property>
			</beans:bean>
		</beans:property>
		<beans:property name="saveState" value="true" />
		<beans:property name="encoding" value="UTF8" />
	</beans:bean>


	<beans:bean id="rxnstyReader"
		class="org.springframework.batch.item.file.FlatFileItemReader">
		<beans:property name="resource" value="${rrfDir}/RXNSTY.RRF" />
		<beans:property name="lineMapper">
			<beans:bean
				class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<beans:property name="lineTokenizer">
					<beans:ref local="pipeTokenizer" />
				</beans:property>
				<beans:property name="fieldSetMapper">
					<beans:bean
						class="org.lexgrid.loader.rrf.fieldmapper.MrstyFieldSetMapper" />
				</beans:property>
			</beans:bean>
		</beans:property>
		<beans:property name="saveState" value="true" />
		<beans:property name="encoding" value="UTF8" />
	</beans:bean>

	<beans:bean id="rxnsabReader"
		class="org.springframework.batch.item.file.FlatFileItemReader"
		init-method="doOpen">
		<beans:property name="resource" value="${rrfDir}/RXNSAB.RRF" />
		<beans:property name="lineMapper">
			<beans:bean
				class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<beans:property name="lineTokenizer">
					<beans:ref local="pipeTokenizer" />
				</beans:property>
				<beans:property name="fieldSetMapper">
					<beans:bean
						class="org.lexgrid.loader.rrf.fieldmapper.MrsabFieldSetMapper" />
				</beans:property>
			</beans:bean>
		</beans:property>
		<beans:property name="saveState" value="true" />
		<beans:property name="encoding" value="UTF8" />
	</beans:bean>

	<beans:bean id="rxndefReader"
		class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
		<beans:property name="resource" value="${rrfDir}/RXNDEF.RRF" />
		<beans:property name="lineMapper">
			<beans:bean
				class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<beans:property name="lineTokenizer">
					<beans:ref local="pipeTokenizer" />
				</beans:property>
				<beans:property name="fieldSetMapper">
					<beans:bean
						class="org.lexgrid.loader.rrf.fieldmapper.MrdefFieldSetMapper" />
				</beans:property>
			</beans:bean>
		</beans:property>
		<beans:property name="saveState" value="true" />
		<beans:property name="encoding" value="UTF8" />
	</beans:bean>

	<beans:bean id="skippingMrhierReader"
		class="org.lexgrid.loader.reader.SkippingItemReader">
		<beans:property name="skipPolicy">
			<beans:bean
				class="org.lexgrid.loader.rrf.reader.support.MrhierHcdSkipPolicy" />
		</beans:property>
		<beans:property name="delegate">
			<beans:ref bean="rxnhierReader" />
		</beans:property>
	</beans:bean>

	<beans:bean id="rxndocReader"
		class="org.springframework.batch.item.file.FlatFileItemReader"
		init-method="doOpen">
		<beans:property name="resource" value="${rrfDir}/RXNDOC.RRF" />
		<beans:property name="encoding" value="UTF8" />
		<beans:property name="lineMapper">
			<beans:bean
				class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<beans:property name="lineTokenizer">
					<beans:ref local="pipeTokenizer" />
				</beans:property>
				<beans:property name="fieldSetMapper">
					<beans:bean
						class="org.lexgrid.loader.rrf.fieldmapper.MrdocFieldSetMapper" />
				</beans:property>
			</beans:bean>
		</beans:property>
	</beans:bean>

	<beans:bean id="rxnsatReader"
		class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
		<beans:property name="resource" value="${rrfDir}/RXNSAT.RRF" />
		<beans:property name="encoding" value="UTF8" />
		<beans:property name="lineMapper">
			<beans:bean
				class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<beans:property name="lineTokenizer">
					<beans:ref local="pipeTokenizer" />
				</beans:property>
				<beans:property name="fieldSetMapper">
					<beans:bean
						class="org.lexgrid.loader.rrf.fieldmapper.MrsatFieldSetMapper" />
				</beans:property>
			</beans:bean>
		</beans:property>
	</beans:bean>

	<beans:bean id="rxnrankReader"
		class="org.springframework.batch.item.file.FlatFileItemReader"
		init-method="doOpen">
		<beans:property name="resource" value="${rrfDir}/RXNRANK.RRF" />
		<beans:property name="encoding" value="UTF8" />
		<beans:property name="lineMapper">
			<beans:bean
				class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<beans:property name="lineTokenizer">
					<beans:ref local="pipeTokenizer" />
				</beans:property>
				<beans:property name="fieldSetMapper">
					<beans:bean
						class="org.lexgrid.loader.rrf.fieldmapper.MrrankFieldSetMapper" />
				</beans:property>
			</beans:bean>
		</beans:property>
		<beans:property name="strict" value="false" />
	</beans:bean>

	<beans:bean id="partitionedMrrelReader"
		class="org.lexgrid.loader.reader.SkippingItemReader" scope="step">
		<beans:property name="skipPolicy">
			<beans:bean
				class="org.lexgrid.loader.rrf.reader.support.MrrelCuiNumberBasedSkipPolicy">
				<beans:property name="cuiNumber"
					value="#{stepExecutionContext[rrfPartitionNumber]}" />
			</beans:bean>
		</beans:property>
		<beans:property name="delegate">
			<beans:ref bean="rxnrelReader" />
		</beans:property>
	</beans:bean>

	<beans:bean id="partitionedMrconsoReader"
		class="org.lexgrid.loader.reader.SkippingItemReader" scope="step">
		<beans:property name="skipPolicy">
			<beans:bean
				class="org.lexgrid.loader.rrf.reader.support.MrconsoCuiNumberBasedSkipPolicy">
				<beans:property name="cuiNumber"
					value="#{stepExecutionContext[rrfPartitionNumber]}" />
			</beans:bean>
		</beans:property>
		<beans:property name="delegate">
			<beans:ref bean="rxnconsoReader" />
		</beans:property>
	</beans:bean>

	<beans:bean id="partitionedMrsatReader"
		class="org.lexgrid.loader.reader.SkippingItemReader" scope="step">
		<beans:property name="skipPolicy">
			<beans:bean
				class="org.lexgrid.loader.rrf.reader.support.MrsatCuiNumberBasedSkipPolicy">
				<beans:property name="cuiNumber"
					value="#{stepExecutionContext[rrfPartitionNumber]}" />
			</beans:bean>
		</beans:property>
		<beans:property name="delegate">
			<beans:ref bean="rxnsatReader" />
		</beans:property>
	</beans:bean>

	<beans:bean id="rxnrelReader"
		class="org.springframework.batch.item.file.FlatFileItemReader"
		init-method="doOpen" scope="step">
		<beans:property name="resource" value="${rrfDir}/RXNREL.RRF" />
		<beans:property name="encoding" value="UTF8" />
		<beans:property name="lineMapper">
			<beans:bean
				class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<beans:property name="lineTokenizer">
					<beans:ref local="pipeTokenizer" />
				</beans:property>
				<beans:property name="fieldSetMapper">
					<beans:bean
						class="org.lexgrid.loader.rrf.fieldmapper.MrrelFieldSetMapper" />
				</beans:property>
			</beans:bean>
		</beans:property>
		<beans:property name="saveState" value="true" />
	</beans:bean>

	<beans:bean id="rxndocAssociationGroupReader"
		class="org.lexgrid.loader.reader.BufferedGroupItemReader">
		<beans:property name="delegate">
			<beans:ref local="onlyAssociationsSkippingMrdocReader" />
		</beans:property>
		<beans:property name="groupDiscriminator">
			<beans:bean
				class="org.lexgrid.loader.rrf.reader.support.MrdocDiscriminator" />
		</beans:property>
	</beans:bean>

	<beans:bean id="onlyAssociationsSkippingMrdocReader"
		class="org.lexgrid.loader.reader.SkippingItemReader">
		<beans:property name="skipPolicy">
			<beans:bean
				class="org.lexgrid.loader.rxn.reader.support.RxndocOnlyAssociationsSkipPolicy" />
		</beans:property>
		<beans:property name="delegate">
			<beans:ref local="rxndocReader" />
		</beans:property>
	</beans:bean>

	<beans:bean id="skippingMrdocReader"
		class="org.lexgrid.loader.reader.SkippingItemReader">
		<beans:property name="skipPolicy">
			<beans:bean
				class="org.lexgrid.loader.rrf.reader.support.MrdocRelationNameSkipPolicy" />
		</beans:property>
		<beans:property name="delegate">
			<beans:ref local="rxndocReader" />
		</beans:property>
	</beans:bean>

	<beans:bean id="rxnrelGroupReader"
		class="org.lexgrid.loader.reader.BufferedGroupItemReader" abstract="true">
		<beans:property name="delegate">
			<beans:ref local="rxnrelReader" />
		</beans:property>
	</beans:bean>

	<beans:bean id="rxnconsoGroupReader"
		class="org.lexgrid.loader.reader.BufferedGroupItemReader" abstract="true">
		<beans:property name="delegate">
			<beans:ref local="rxnconsoReader" />
		</beans:property>
	</beans:bean>

	<beans:bean id="pipeTokenizer"
		class="org.lexgrid.loader.rrf.reader.linetokenizer.NoQuotesDelimitedLineTokenizer">
		<beans:property name="delimiter" value="|" />
	</beans:bean>


	<beans:bean id="rxnconsoSkippingReader"
		class="org.lexgrid.loader.reader.SkippingItemReader" scope="step">
		<beans:property name="skipPolicy">
			<beans:bean
				class="org.lexgrid.loader.rxn.reader.support.RxnconsoSabSkipPolicy">
				<beans:property name="sab" value="${sab}" />
			</beans:bean>
		</beans:property>
		<beans:property name="delegate">
			<!--<beans:ref bean="partitionedMrrelReader" />-->
			<beans:ref bean="rxnconsoReader" />
		</beans:property>
	</beans:bean>


	<beans:bean id="rxnMrstyGroupReader"
		class="org.lexgrid.loader.reader.BufferedGroupItemReader">
		<beans:property name="groupDiscriminator">
			<beans:bean
				class="org.lexgrid.loader.rrf.reader.support.MrstyGroupDiscriminator" />
		</beans:property>
		<beans:property name="delegate">
			<beans:ref bean="rxnstyReader" />
		</beans:property>
		<!-- <beans:property name="maxBufferSize" value="100"/> -->
	</beans:bean>

	<beans:bean id="rxnMrrelSkippingReader"
		class="org.lexgrid.loader.reader.SkippingItemReader" scope="step">
		<beans:property name="skipPolicy">
			<beans:bean
				class="org.lexgrid.loader.rxn.reader.support.MrrelSabSkipPolicy">
				<beans:property name="sab" value="${sab}" />
			</beans:bean>
		</beans:property>
		<beans:property name="delegate">
			<!--<beans:ref bean="partitionedMrrelReader" />-->
			<beans:ref bean="rxnrelReader" />
		</beans:property>
	</beans:bean>

	<beans:bean id="rxnMrdefSkippingReader"
		class="org.lexgrid.loader.reader.SkippingItemReader" scope="step">
		<beans:property name="skipPolicy">
			<beans:bean
				class="org.lexgrid.loader.rxn.reader.support.MrdefSabSkipPolicy">
				<beans:property name="sab" value="${sab}" />
			</beans:bean>
		</beans:property>
		<beans:property name="delegate">
			<beans:ref bean="rxndefReader" />
		</beans:property>
	</beans:bean>

	<beans:bean id="rxnMrsatSkippingReader"
		class="org.lexgrid.loader.reader.SkippingItemReader">
		<beans:property name="skipPolicy">
			<beans:bean class="org.lexgrid.loader.rxn.reader.support.MrsatSkipPolicy">
				<beans:property name="sab" value="${sab}" />
				<beans:property name="mrsatUtility">
					<beans:ref bean="mrsatUtility" />
				</beans:property>
				<beans:property name="codingSchemeNameSetter">
					<beans:ref bean="rxnCodingSchemeNameSetter" />
				</beans:property>
				<beans:property name="entityCodeResolver">
					<beans:bean
						class="org.lexgrid.loader.rxn.processor.support.RxnMrsatEntityCodeResolver" />
				</beans:property>
<!-- 				<beans:property name="lexEvsDao">
					<beans:ref bean="lexEvsDao" />
				</beans:property> -->

			</beans:bean>
		</beans:property>
		<beans:property name="delegate">
			<beans:ref bean="rxnsatReader" />
		</beans:property>
	</beans:bean>

	<beans:bean id="rxnMrstySkippingReader"
		class="org.lexgrid.loader.reader.SkippingItemReader">
		<beans:property name="skipPolicy">
			<beans:bean class="org.lexgrid.loader.rxn.reader.support.RxnMrstySkipPolicy">
				<beans:property name="sab" value="${sab}" />			
				<beans:property name="codingSchemeNameSetter">
					<beans:ref bean="rxnCodingSchemeNameSetter" />
				</beans:property>
				<beans:property name="entityCodeResolver">
					<beans:bean
						class="org.lexgrid.loader.rxn.processor.support.RxnMrstyEntityCodeResolver" />
				</beans:property>
<!-- 				<beans:property name="lexEvsDao">
					<beans:ref bean="lexEvsDao" />
				</beans:property> -->

			</beans:bean>
		</beans:property>
		<beans:property name="delegate">
			<beans:ref bean="rxnstyReader" />
		</beans:property>
	</beans:bean>


	<beans:bean id="rxnSkippingMrhierReader"
		class="org.lexgrid.loader.reader.SkippingItemReader">
		<beans:property name="skipPolicy">
			<beans:bean
				class="org.lexgrid.loader.rxn.reader.support.RxnMrhierHcdSabSkipPolicy">
				<beans:property name="sab" value="${sab}" />
			</beans:bean>
		</beans:property>
		<beans:property name="delegate">
			<beans:ref bean="rxnhierReader" />
		</beans:property>
	</beans:bean>

</beans:beans>