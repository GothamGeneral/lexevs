<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL MAP 2.0//EN" 
	"http://www.ibatis.com/dtd/sql-map-2.dtd">
<sqlMap namespace="VSProperty">

	<typeAlias alias="property" type="org.LexGrid.commonTypes.Property" />
	<typeAlias alias="presentation" type="org.LexGrid.concepts.Presentation"/>
	<typeAlias alias="definition" type="org.LexGrid.concepts.Definition"/>
	<typeAlias alias="comment" type="org.LexGrid.concepts.Comment"/>
	<typeAlias alias="insertOrUpdatePropertyBean" type="org.lexevs.dao.database.ibatis.property.parameter.InsertOrUpdatePropertyBean"/>

	<resultMap id="vsPropertyBean" class="org.lexevs.dao.database.ibatis.valuesets.parameter.VSPropertyBean" >
		<result property="vsPropertyGuid" column="vsPropertyGuid"/>
		<result property="property" resultMap="VSProperty.propertyResult"/>
	</resultMap>
	
	<resultMap id="propertyResult" class="property" groupBy="propertyId">
		<result property="propertyName" column="propertyName" />	
		<result property="propertyId" column="propertyId" />
		<result property="propertyType" column="propertyType" />
		<result property="language" column="language" />
		<result property="value.content" column="propertyValue" />
		<result property="value.dataType" column="format" />
		<result property="isActive" column="isActive" />
		<result property="owner" column="owner" />
		<result property="status" column="status" />
		<result property="effectiveDate" column="effectiveDate" />
		<result property="expirationDate" column="expirationDate" />
		<result property="entryState" resultMap="Versions.entryStateResult" />
		<discriminator javaType="string" column="propertyType">
			<subMap value="presentation" resultMap="presentationResult" />
			<subMap value="definition" resultMap="definitionResult" />
			<subMap value="comment" resultMap="commentResult" />
		</discriminator>	
	</resultMap>
	
	<resultMap id="propertyAttributeResult" class="insertOrUpdatePropertyBean">
		<result property="uid" column="vsPropertyGuid" />
		<result property="parentUId" column="referenceGuid" />
		<result property="parentType" column="referenceType" />	
		<result property="property.propertyId" column="propertyId" />
		<result property="property.propertyType" column="propertyType" />
		<result property="property.propertyName" column="propertyName" />	
		<result property="property.language" column="language" />
		<result property="property.value.content" column="propertyValue" />
		<result property="property.value.dataType" column="format" />
		<result property="property.isActive" column="isActive" />
		<result property="property.owner" column="owner" />
		<result property="property.status" column="status" />
		<result property="property.effectiveDate" column="effectiveDate" />
		<result property="property.expirationDate" column="expirationDate" />
	</resultMap>
	
	<resultMap id="presentationResult" class="presentation" extends="propertyResult" >
		<result property="isPreferred" column="isPreferred" />
		<result property="degreeOfFidelity" column="degreeOfFidelity"/>
		<result property="matchIfNoContext" column="matchIfNoContext"/>
		<result property="representationalForm" column="representationalForm"/>
	</resultMap>
	
	<resultMap id="definitionResult" class="definition" extends="propertyResult" >
		<result property="isPreferred" column="isPreferred" />
	</resultMap>
	
	<resultMap id="commentResult" class="comment" extends="propertyResult" />
	
	<select id="getPropertyGuid" resultClass="string" remapResults="true"
		parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple">
  		SELECT
  			vsPropertyGuid
  		FROM
  			$prefix$vsProperty
  		WHERE
			referenceGuid = #param1#
		AND
			referenceType = #param2#
  	</select>
  	
  	<sql id="selectPropertyFragment">
  		SELECT
  			property.vsPropertyGuid,
  			property.referenceType,
  			property.propertyId,
  			property.propertyType,
  			property.propertyName,
  			property.language,
  			property.format,
  			property.isPreferred,
  			property.matchIfNoContext,
  			property.degreeOfFidelity,
  			property.representationalForm,
  			property.propertyValue,
  			property.isActive,
  			property.owner,
  			property.status,
  			property.effectiveDate,
  			property.expirationDate,
  			entryState.changeType,
  			entryState.relativeOrder,
  			entryState.relativeOrder,
  			
  			currentRevision.revisionId currentRevisionId,
  			previousRevision.revisionId previousRevisionId  			
  		FROM
  			$prefix$vsproperty property
  		LEFT JOIN
  			$prefix$vsentryState entryState
  		ON
  			property.entryStateGuid =
  			entryState.entryStateGuid	
  		LEFT JOIN
  			${defaultPrefix}revision currentRevision
  		ON
  			entryState.revisionGuid =
  			currentRevision.revisionGuid	
		LEFT JOIN
  			${defaultPrefix}revision previousRevision
  		ON
  			entryState.prevRevisionGuid =
  			previousRevision.revisionGuid	
  	</sql>
  	
  	<sql id="getHistoryPropertyFragment">
  	  	<include refid="selectPropertyFragment"/>
  				
  		LEFT JOIN
  			$prefix$vsPropertyMultiAttrib qualifier
  		ON
  		(
  			property.vspropertyGuid = qualifier.vspropertyGuid	
  			AND		
  			qualifier.attributeType = 'qualifier'		
  			AND	
  			qualifier.entryStateGuid = property.entryStateGuid
  		)
  			
  		LEFT JOIN
  			$prefix$vsPropertyMultiAttrib usageContext
  		ON
  		(
  			property.vspropertyGuid = usageContext.vspropertyGuid	
  			AND 			
  			usageContext.attributeType = 'usageContext' 			
  			AND 			
  			usageContext.entryStateGuid = property.entryStateGuid
  		)
  			
  		LEFT JOIN
  			$prefix$vsPropertyMultiAttrib source
  		ON
  		(
  			property.vspropertyGuid = source.vspropertyGuid		
  			AND	
  			source.attributeType = 'source'	
  			AND	
  			source.entryStateGuid = property.entryStateGuid
  		)		
  	</sql>
  	
  	<sql id="getPropertyFragment">
  	  	<include refid="selectPropertyFragment"/>
  				
  		LEFT JOIN
  			$prefix$vsPropertyMultiAttrib multiAttrib
  		ON
	  		property.vspropertyGuid = multiAttrib.vspropertyGuid
  	</sql>

  	<select id="getPropertiesByParent" remapResults="true"
  		resultMap="vsPropertyBean" parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple">
		<include refid="selectPropertyFragment"/>
  		WHERE
			property.referenceType = #param1#
		AND 
			property.referenceGuid = #param2#
  	</select>
  	
  	<select id="getPropertiesByParentAndRevisionId" remapResults="true"
  		resultMap="propertyResult" parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTriple">
		<include refid="getHistoryPropertyFragment"/>
  		WHERE
			property.referenceType = #param1#
		AND 
			property.referenceGuid = #param2#
		AND 
			entryState.revisionGuid = #param3#
  	</select>

	<delete id="deletePickListDefinitionPropertiesByPickListGuid" parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple">
		DELETE FROM
			$prefix$vsProperty
		WHERE
			referenceType = #param1#
		AND 
			referenceGuid = #param2#
	</delete>
	
	<delete id="deletePickListEntryPropertiesByPickListGuid" parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple">
		DELETE FROM
			$prefix$vsProperty
		WHERE
			referenceType = #param1#
		AND 
			referenceGuid 
		IN	(
			SELECT 
				$prefix$vsPLEntryGuid
			FROM
				vsPLEntry
			WHERE
				vsPickListGuid = #param2#
			)
	</delete>
	
	<delete id="deleteValueSetDefinitionPropertiesByValueSetGuid" parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple">
		DELETE FROM
			$prefix$vsProperty
		WHERE
			referenceType = #param1#
		AND 
			referenceGuid = #param2#
	</delete>

	<delete id="deletePickListEntryPropertiesByPlEntryGuid" parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple">
		DELETE FROM
			$prefix$vsProperty
		WHERE
			referenceType = #param1#
		AND 
			referenceGuid = #param2#
	</delete>
		
	<delete id="deleteDefinitionEntryPropertiesByValueSetGuid" parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple">
		DELETE FROM
			$prefix$vsProperty
		WHERE
			referenceType = #param1#
		AND 
			referenceGuid 
		IN	(
			SELECT 
				vsdEntryGuid
			FROM
				$prefix$vsdEntry
			WHERE
				valueSetDefGuid = #param2#
			)
	</delete>
	
	
     <insert id="insertProperty" parameterClass="org.lexevs.dao.database.ibatis.property.parameter.InsertOrUpdatePropertyBean">
		INSERT INTO $prefix$vsProperty (
			vsPropertyGuid,
			referenceGuid,
			referenceType,
			propertyId,
			propertyType,
			propertyName,
			language,
			format,
			isPreferred,
			matchIfNoContext,
			degreeOfFidelity,
			representationalForm,
			propertyValue,
			isActive,
			owner,
			status,
			effectiveDate,
			expirationDate,
			entryStateGuid
		) VALUES (
			#uid#, 
			#parentUId#,
			#parentType#, 
			#property.propertyId#, 
			#property.propertyType#,
			#property.propertyName#,
			#property.language#,
			#property.value.dataType#,
			
			<isPropertyAvailable property="property.isPreferred">
				#property.isPreferred#,
			</isPropertyAvailable>
			<isNotPropertyAvailable property="property.isPreferred">
				null,
			</isNotPropertyAvailable>
			
			<isPropertyAvailable property="property.matchIfNoContext">
				#property.matchIfNoContext#,
			</isPropertyAvailable>
			<isNotPropertyAvailable property="property.matchIfNoContext">
				null,
			</isNotPropertyAvailable>
			
			<isPropertyAvailable property="property.degreeOfFidelity">
				#property.degreeOfFidelity#,
			</isPropertyAvailable>
			<isNotPropertyAvailable property="property.degreeOfFidelity">
				null,
			</isNotPropertyAvailable>
			
			<isPropertyAvailable property="property.representationalForm">
				#property.representationalForm#,
			</isPropertyAvailable>
			<isNotPropertyAvailable property="property.representationalForm">
				null,
			</isNotPropertyAvailable>
			
			#property.value.content#,	
			#property.isActive#,
			#property.owner#,
			#property.status#,
			#property.effectiveDate#,
			#property.expirationDate#,
			#entryStateUId#
		)
  </insert>
  
  <update id="updatePropertyByUId"
  	parameterClass="org.lexevs.dao.database.ibatis.property.parameter.InsertOrUpdatePropertyBean">
  		UPDATE 
			$prefix$vsProperty property
		SET 
   		  <dynamic prepend=" ">
   		  	<isNotNull prepend="," property="property.propertyType">
				propertyType = #property.propertyType#
			</isNotNull>
			<isNotNull prepend="," property="property.propertyName">
				propertyName = #property.propertyName#
			</isNotNull>
			<isNotNull prepend="," property="property.language">
				language = #property.language#
			</isNotNull>
			<isNotNull prepend="," property="property.value.dataType">
				format = #property.value.dataType#
			</isNotNull>

			<isPropertyAvailable property="property.isPreferred">
				<isNotNull prepend="," property="property.isPreferred">
					isPreferred = #property.isPreferred#
				</isNotNull>
			</isPropertyAvailable>

			<isPropertyAvailable property="property.matchIfNoContext">
				<isNotNull prepend="," property="property.matchIfNoContext">
					matchIfNoContext = #property.matchIfNoContext#
				</isNotNull>
			</isPropertyAvailable>

			<isPropertyAvailable property="property.degreeOfFidelity">
				<isNotNull prepend="," property="property.degreeOfFidelity">
					degreeOfFidelity = #property.degreeOfFidelity#
				</isNotNull>
			</isPropertyAvailable>

			<isPropertyAvailable property="property.representationalForm">
				<isNotNull prepend="," property="property.representationalForm">
					representationalForm = #property.representationalForm#
				</isNotNull>
			</isPropertyAvailable>

			<isNotNull prepend="," property="property.value.content">
				propertyValue = #property.value.content#
			</isNotNull>
			
			<isNotNull prepend="," property="entryStateUId">
				entryStateGuid = #entryStateUId#
			</isNotNull>
		  </dynamic>
		 WHERE
		 	property.vsPropertyGuid = #uid#
  </update>
    
  <update id="updatePropertyVerAttribByUId"
  	parameterClass="org.lexevs.dao.database.ibatis.property.parameter.InsertOrUpdatePropertyBean">
  		UPDATE 
			$prefix$vsProperty property
		SET 
   		  <dynamic prepend=" ">
			<isNotNull prepend="," property="property.isActive">
				isActive = #property.isActive#
			</isNotNull>
			<isNotNull prepend="," property="property.owner">
				owner = #property.owner#
			</isNotNull>
			<isNotNull prepend="," property="property.status">
				status = #property.status#
			</isNotNull>
			<isNotNull prepend="," property="property.effectiveDate">
				effectiveDate = #property.effectiveDate#
			</isNotNull>
			<isNotNull prepend="," property="property.expirationDate">
				expirationDate = #property.expirationDate#
			</isNotNull>
			<isNotNull prepend="," property="entryStateUId">
				entryStateGuid = #entryStateUId#
			</isNotNull>
		  </dynamic>
		 WHERE
		 	property.vsPropertyGuid = #uid#
  </update>
	
	<delete id="deletePropertyByUId" parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter">
		DELETE FROM
			$prefix$vsProperty
		WHERE
			vsPropertyGuid = #param1#
	</delete>
	
	<select id="getPropertyAttributesByUId" remapResults="true"
  		resultMap="propertyAttributeResult" parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter">
		SELECT 
			*
		FROM 
			$prefix$vsProperty	property
  		WHERE
			property.vsPropertyGuid = #param1#
  	</select>

	<select id="getVSPropertyLatestRevisionIdByUId" remapResults="true"
		parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter"
		resultClass="string">
		SELECT 
			rev.revisionId
		FROM
			$prefix$vsProperty prop
			$prefix$entrySate es
			$prefix$revision rev
		WHERE
			prop.vsPropertyGuid = #param1#	
		AND
			prop.entryStateGuid = es.entryStateGuid	
		AND
			es.revisionGuid = rev.revisionGuid	
	</select>       	
</sqlMap>