<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL MAP 2.0//EN" 
	"http://www.ibatis.com/dtd/sql-map-2.dtd">
<sqlMap namespace="ValueSetDefinition">

	<typeAlias alias="valueSetDefinition" type="org.LexGrid.valueSets.ValueSetDefinition" />
	<typeAlias alias="definitionEntry" type="org.LexGrid.valueSets.DefinitionEntry" />
	<typeAlias alias="entityReference" type="org.LexGrid.valueSets.EntityReference" />	
	<typeAlias alias="codingSchemeReference" type="org.LexGrid.valueSets.CodingSchemeReference" />
	<typeAlias alias="valueSetDefinitionReference" type="org.LexGrid.valueSets.ValueSetDefinitionReference" />
	<typeAlias alias="propertyReference" type="org.LexGrid.valueSets.PropertyReference" />
	<typeAlias alias="propertyMatchValue" type="org.LexGrid.valueSets.PropertyMatchValue" />
	<typeAlias alias="valueSetDefinitionBean" type="org.lexevs.dao.database.ibatis.valuesets.parameter.InsertValueSetDefinitionBean"/>
	
	<resultMap id="valueSetDefinitionResult" class="valueSetDefinition">
		<result property="valueSetDefinitionURI" column="valueSetDefURI" />
		<result property="valueSetDefinitionName" column="valueSetDefName" />
		<result property="defaultCodingScheme" column="defaultCodingScheme" />
		<result property="conceptDomain" column="conceptDomain" />
		<result property="entityDescription.content" column="description" />
		<result property="isActive" column="isActive" />
		<result property="owner" column="owner" />
		<result property="status" column="status" />
		<result property="effectiveDate" column="effectiveDate" />
		<result property="expirationDate" column="expirationDate" />
	</resultMap>
	
	<resultMap id="valueSetDefinitionMetaDataResult" class="valueSetDefinitionBean" groupBy="uid">
		<result property="uid" column="valueSetDefGuid" />
		<result property="valueSetDefinition.valueSetDefinitionURI" column="valueSetDefURI" />
		<result property="valueSetDefinition.valueSetDefinitionName" column="valueSetDefName" />
		<result property="valueSetDefinition.defaultCodingScheme" column="defaultCodingScheme" />
		<result property="valueSetDefinition.conceptDomain" column="conceptDomain" />
		<result property="valueSetDefinition.entityDescription.content" column="description" />
		<result property="systemReleaseUId" column="releaseGuid" />
		<result property="valueSetDefinition.isActive" column="isActive" />
		<result property="valueSetDefinition.owner" column="owner" />
		<result property="valueSetDefinition.status" column="status" />
		<result property="valueSetDefinition.effectiveDate" column="effectiveDate" />
		<result property="valueSetDefinition.expirationDate" column="expirationDate" />
		<result property="entryStateUId" column="entryStateGuid" />
	</resultMap>
	
	<resultMap id="valueSetDefinitionMetaDataWithMultiAttrib" class="valueSetDefinitionBean" groupBy="uid">
		<result property="uid" column="valueSetDefGuid" />
		<result property="valueSetDefinition.valueSetDefinitionURI" column="valueSetDefURI" />
		<result property="valueSetDefinition.valueSetDefinitionName" column="valueSetDefName" />
		<result property="valueSetDefinition.defaultCodingScheme" column="defaultCodingScheme" />
		<result property="valueSetDefinition.conceptDomain" column="conceptDomain" />
		<result property="valueSetDefinition.entityDescription.content" column="description" />
		<result property="systemReleaseUId" column="releaseGuid" />
		<result property="valueSetDefinition.isActive" column="isActive" />
		<result property="valueSetDefinition.owner" column="owner" />
		<result property="valueSetDefinition.status" column="status" />
		<result property="valueSetDefinition.effectiveDate" column="effectiveDate" />
		<result property="valueSetDefinition.expirationDate" column="expirationDate" />
		<result property="entryStateUId" column="entryStateGuid" />
		<result property="vsMultiAttribList" resultMap="VSMultiAttrib.vsMultiAttribResultBean"/>
	</resultMap>
	
	<resultMap  id="definitionEntryResult" class="definitionEntry">
		<result property="ruleOrder" column="ruleOrder"/>
		<result property="operator" column="operator"/>
		<result property="isActive" column="isActive" />
		<result property="owner" column="owner" />
		<result property="status" column="status" />
		<result property="effectiveDate" column="effectiveDate" />
		<result property="expirationDate" column="expirationDate" />
		<result property="codingSchemeReference" resultMap="ValueSetDefinition.codingSchemeReferenceResult" />
		<result property="valueSetDefinitionReference" resultMap="ValueSetDefinition.valueSetDefinitionReferenceResult" />
		<result property="entityReference" resultMap="ValueSetDefinition.entityReferenceResult" />
		<result property="propertyReference" resultMap="ValueSetDefinition.propertyReferenceResult" />
		<result property="entryState" resultMap="Versions.entryStateResult" />
	</resultMap>
	
	<resultMap  id="codingSchemeReferenceResult" class="codingSchemeReference">
		<result property="codingScheme" column="codingSchemeReference"/>
	</resultMap>
	
	<resultMap  id="valueSetDefinitionReferenceResult" class="valueSetDefinitionReference">
		<result property="valueSetDefinitionURI" column="valueSetDefReference"/>
	</resultMap>
	
	<resultMap  id="entityReferenceResult" class="entityReference">
		<result property="entityCode" column="entityCode"/>
		<result property="entityCodeNamespace" column="entityCodeNamespace"/>
		<result property="leafOnly" column="leafOnly"/>
		<result property="referenceAssociation" column="referenceAssociation"/>
		<result property="targetToSource" column="targetToSource"/>
		<result property="transitiveClosure" column="transitiveClosure"/>
	</resultMap>
	
	<resultMap  id="propertyReferenceResult" class="propertyReference">
		<result property="codingScheme" column="propertyRefCodingScheme"/>
		<result property="propertyName" column="propertyName"/>
		<result property="propertyMatchValue" resultMap="ValueSetDefinition.propertyMatchValueResult"/>
	</resultMap>
	
	<resultMap  id="propertyMatchValueResult" class="propertyMatchValue">
		<result property="matchAlgorithm" column="matchAlgorithm"/>		
		<result property="content" column="propertyMatchValue" />
		<result property="dataType" column="format" />
	</resultMap>
	
	<select id="getValueSetDefinitionURIs" 
		parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" resultClass="string">
		SELECT
			valueSetDefURI
		FROM
			$prefix$valueSetDefinition
	</select>
	
	<select id="getValueSetDefinitionGuidByValueSetDefinitionURI" 
		parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" 
		resultClass="string">
		SELECT
			valueSetDefGuid
		FROM
			$prefix$valueSetDefinition
		WHERE
			valueSetDefURI = #param1#
	</select>
	
	<select id="getValueSetDefinitionByValueSetURI" 
		resultMap="valueSetDefinitionResult" 
		parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter">
		SELECT
			valueSetDefURI,
			valueSetDefName,
			defaultCodingScheme,
			conceptDomain,
			description,
			isActive,
			owner,
			status,
			effectiveDate,
			expirationDate
		FROM
			$prefix$valueSetDefinition
		WHERE
			valueSetDefURI = #param1#
	</select>
	
	<select id="getValueSetDefinitionMetaDataByValueSetURI" 
		resultMap="valueSetDefinitionMetaDataResult" 
		parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter">
		SELECT *
		FROM
			$prefix$valueSetDefinition
		WHERE
			valueSetDefURI = #param1#
	</select>
	
	<select id="getValueSetDefinitionURIForValueSetName" 
		resultClass="string" 
		parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter">
		SELECT
			valueSetDefURI
		FROM
			$prefix$valueSetDefinition
		WHERE
			valueSetDefName = #param1#
	</select>
	
	<select id="getDefinitionEntryByValueSetGuid" 
		resultMap="definitionEntryResult" 
		parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter">
		SELECT
			vsdEntry.ruleOrder,
			vsdEntry.operator,
			vsdEntry.codingSchemeReference,
			vsdEntry.valueSetDefReference,
			vsdEntry.entityCode,
			vsdEntry.entityCodeNamespace,
			vsdEntry.leafOnly,
			vsdEntry.referenceAssociation,
			vsdEntry.targetToSource,
			vsdEntry.transitiveClosure,
			vsdEntry.propertyRefCodingScheme,
			vsdEntry.propertyName,
			vsdEntry.propertyMatchValue,
			vsdEntry.matchAlgorithm,
			vsdEntry.format,
			vsdEntry.isActive,
			vsdEntry.owner,
			vsdEntry.status,
			vsdEntry.effectiveDate,
			vsdEntry.expirationDate,
			vsdEntry.entryStateGuid,
			entryState.changeType,
  			entryState.relativeOrder,
  			entryState.relativeOrder,
  			
  			currentRevision.revisionId currentRevisionId,
  			previousRevision.revisionId previousRevisionId
		FROM
			$prefix$vsdEntry vsdEntry
		LEFT JOIN
  			$prefix$vsentryState entryState
  		ON
  			vsdEntry.entryStateGuid =
  			entryState.entryStateGuid	
  		LEFT JOIN
  			${defaultPrefix}revision currentRevision
  		ON
  			entryState.revisionGuid =
  			currentRevision.revisionGuid	
		LEFT JOIN
  			${defaultPrefix}revision previousRevision
  		ON
  			entryState.prevRevisionGuid =
  			previousRevision.revisionGuid	
		WHERE
			vsdEntry.valueSetDefGuid = #param1#
		ORDER BY
			ruleOrder
	</select>
	
	<insert id="insertValueSetDefinition" 
		parameterClass="org.lexevs.dao.database.ibatis.valuesets.parameter.InsertValueSetDefinitionBean">
		INSERT INTO $prefix$valueSetDefinition
		(
				valueSetDefGuid,
				valueSetDefURI,
				valueSetDefName,
				defaultCodingScheme,
				conceptDomain,
				description,
				releaseGuid,
				isActive,
				owner,
				status,
				effectiveDate,
				expirationDate,
				entryStateGuid
			) VALUES (
				#uid#,
				#valueSetDefinition.valueSetDefinitionURI#,
				#valueSetDefinition.valueSetDefinitionName#,
				#valueSetDefinition.defaultCodingScheme#,
				#valueSetDefinition.conceptDomain#,
				#valueSetDefinition.entityDescription.content#,
				#systemReleaseUId#,
				#valueSetDefinition.isActive#,
				#valueSetDefinition.owner#,
				#valueSetDefinition.status#,
				#valueSetDefinition.effectiveDate#,
				#valueSetDefinition.expirationDate#,
				#entryStateUId#	
			)
     </insert>

	<update id="updateValueSetDefinitionByUId" parameterClass="org.lexevs.dao.database.ibatis.valuesets.parameter.InsertValueSetDefinitionBean">
		UPDATE 
			$prefix$valueSetDefinition vsDef
		SET 
   		  <dynamic prepend=" ">
			<isNotNull prepend="," property="valueSetDefinition.valueSetDefinitionName">
				valueSetDefName = #valueSetDefinition.valueSetDefinitionName#
			</isNotNull>
			<isNotNull prepend="," property="valueSetDefinition.defaultCodingScheme">
				defaultCodingScheme = #valueSetDefinition.defaultCodingScheme#
			</isNotNull>
			<isNotNull prepend="," property="valueSetDefinition.conceptDomain">
				conceptDomain = #valueSetDefinition.conceptDomain#
			</isNotNull>
			<isNotNull prepend="," property="valueSetDefinition.entityDescription">
				description = #valueSetDefinition.entityDescription.content#
			</isNotNull>			
			<isNotNull prepend="," property="entryStateUId">
				entryStateGuid = #entryStateUId#
			</isNotNull>
		</dynamic>

		WHERE 
			valueSetDefGuid = #uid#
 	</update>	

	<update id="updateValueSetDefVersionableChangesByUId" parameterClass="org.lexevs.dao.database.ibatis.valuesets.parameter.InsertValueSetDefinitionBean">
		UPDATE 
			$prefix$valueSetDefinition vsDef
		SET 
   		  <dynamic prepend=" ">
			<isNotNull prepend="," property="valueSetDefinition.isActive">
				isActive = #valueSetDefinition.isActive#
			</isNotNull>
			<isNotNull prepend="," property="valueSetDefinition.owner">
				owner = #valueSetDefinition.owner#
			</isNotNull>
			<isNotNull prepend="," property="valueSetDefinition.status">
				status = #valueSetDefinition.status#
			</isNotNull>
			<isNotNull prepend="," property="valueSetDefinition.effectiveDate">
				effectiveDate = #valueSetDefinition.effectiveDate#
			</isNotNull>		
			<isNotNull prepend="," property="valueSetDefinition.expirationDate">
				expirationDate = #valueSetDefinition.expirationDate#
			</isNotNull>				
			<isNotNull prepend="," property="entryStateUId">
				entryStateGuid = #entryStateUId#
			</isNotNull>
		</dynamic>

		WHERE 
			vsDef.valueSetDefGuid = #uid#
 	</update> 	
 	
	<update id="updateValueSetDefinitinEntryStateUId" parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple">
		UPDATE 
			$prefix$valueSetDefinition vsDef
		SET 
			entryStateGuid = #param2#
		WHERE 
			vsDef.valueSetDefGuid = #param1#
 	</update> 	
 	
	<delete id="removevalueSetDefinitionByValueSetDefinitionURI" parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter">
		DELETE FROM
			$prefix$valueSetDefinition
		WHERE
			valueSetDefURI = #param1#
	</delete>
	
	<delete id="removeDefinitionEntryByValueSetDefinitionGuid" parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter">
		DELETE FROM
			$prefix$vsdEntry
		WHERE
			valueSetDefGuid = #param1#
	</delete>
	
	<select id="getValueSetDefinitionMetadataByUId" 		
		parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter"
		resultMap="ValueSetDefinition.valueSetDefinitionMetaDataWithMultiAttrib">
		SELECT
			vs.valueSetDefGuid,
			vs.valueSetDefURI,
			vs.valueSetDefName,
			vs.defaultCodingScheme,
			vs.conceptDomain,
			vs.description,
			vs.releaseGuid,
			vs.isActive,
			vs.owner,
			vs.status,
			vs.effectiveDate,
			vs.expirationDate,
			vs.entryStateGuid,
			vsMulti.vsMultiAttribGuid,
			vsMulti.referenceGuid,
			vsMulti.referenceType,
			vsMulti.attributeType,
			vsMulti.attributeValue,
			vsMulti.subRef,
			vsMulti.role,
			vsMulti.entryStateGuid esGuid				
		FROM
			$prefix$valueSetDefinition vs
		LEFT JOIN
			$prefix$vsMultiAttrib vsMulti
		ON
			vsMulti.referenceGuid = vs.valueSetDefGuid
		WHERE
			valueSetDefGuid = #param1#
	</select>

	<select id="getEntryStateUIdByValuesetDefUId" 
		resultClass="string" 
		parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter">
		SELECT
			entryStateGuid
		FROM
			$prefix$valueSetDefinition
		WHERE
			valueSetDefGuid = #param1#
	</select>
	
	<select id="getValueSetDefinitionLatestRevisionIdByUId" remapResults="true"
		parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter"
		resultClass="string">
		SELECT 
			rev.revisionId
		FROM
			$prefix$valueSetDefinition vsDef,
			$prefix$vsEntryState es,
			${defaultPrefix}revision rev
		WHERE
			vsDef.valueSetDefGuid = #param1#	
		AND
			vsDef.entryStateGuid = es.entryStateGuid	
		AND
			es.revisionGuid = rev.revisionGuid	
	</select>

	<select id="getPrevRevisionIdFromGivenRevIdForValueSetDefinition" remapResults="true"
		parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple"
		resultClass="java.util.TreeMap">
		<![CDATA[
			SELECT DISTINCT
				r1.revisionId AS revId,
				r1.revAppliedDate AS revAppliedDate
			FROM
				$prefix$valueSetDefinition vs,
				$prefix$vsEntryState es,
				${defaultPrefix}revision r1, 
				${defaultPrefix}revision r2			
			WHERE
				vs.valueSetDefURI = #param1# AND
				(
					NOT EXISTS 
					(
						SELECT 
							es1.entryStateGuid 
						FROM 
							$prefix$vsEntryState es1 
						WHERE 
							vs.entryStateGuid = es1.entryStateGuid
					)
					OR
					(
						vs.valueSetDefGuid = es.entryGuid AND 
						es.revisionGuid = r1.revisionGuid AND
						r1.revAppliedDate <= r2.revAppliedDate AND
						r2.revisionID = #param2#
					)
				)
			ORDER BY
				revAppliedDate DESC			
			LIMIT 1
		]]>			
	</select>

	<select id="getValueSetDefinitionMetaDataByRevision" remapResults="true"
		parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple"
		resultMap="valueSetDefinitionMetaDataResult">
		<![CDATA[
			SELECT 
				vs.valueSetDefGuid,
				vs.valueSetDefURI,
				vs.valueSetDefName,
				vs.defaultCodingScheme,
				vs.conceptDomain,
				vs.description,
				vs.releaseGuid,
				vs.isActive,
				vs.owner,
				vs.status,
				vs.effectiveDate,
				vs.expirationDate,
				vs.entryStateGuid,
				r1.revAppliedDate as revAppliedDate
			FROM
				$prefix$h_valueSetDefinition vs,
				$prefix$vsEntryState es,
				${defaultPrefix}revision r1,			
				${defaultPrefix}revision r2		
			WHERE
				vs.valueSetDefURI = #param1# AND
				vs.entryStateGuid = es.entryStateGuid AND
				(
					(						
						es.revisionGuid = r1.revisionGuid AND
						r1.revAppliedDate >= r2.revAppliedDate AND
						r2.revisionID = #param2#
					)
					OR
					(
						es.revisionGuid IS NULL
					)
				)
			Order BY
				revAppliedDate DESC		
			LIMIT 1	
		]]>			
	</select>

	<select id="getDefinitionEntryListByValSetDefURI" remapResults="true"
		parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter"
		resultClass="string">
			SELECT 
				defEntry.ruleOrder
			FROM
				$prefix$valueSetDefinition vs,
				$prefix$vsdEntry defEntry
			WHERE
				vs.valueSetDefURI = #param1# AND
				vs.valueSetDefGuid = defEntry.valueSetDefGuid
	</select>	
	
	<select id="getValueSetDefPropertyListByValSetDefURI" remapResults="true"
		parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter"
		resultClass="string">
			SELECT 
				vsProp.propertyId
			FROM
				$prefix$valueSetDefinition vs,
				$prefix$vsProperty vsProp
			WHERE
				vs.valueSetDefURI = #param1# AND
				vs.valueSetDefGuid = vsProp.referenceGuid
	</select>	
</sqlMap>