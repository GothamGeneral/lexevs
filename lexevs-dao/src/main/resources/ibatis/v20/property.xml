<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL MAP 2.0//EN" 
	"http://www.ibatis.com/dtd/sql-map-2.dtd">
<sqlMap namespace="Property">

	<typeAlias alias="property" type="org.LexGrid.commonTypes.Property" />
	<typeAlias alias="presentation" type="org.LexGrid.concepts.Presentation"/>
	<typeAlias alias="definition" type="org.LexGrid.concepts.Definition"/>
	<typeAlias alias="comment" type="org.LexGrid.concepts.Comment"/>
	<typeAlias alias="insertOrUpdatePropertyBean" type="org.lexevs.dao.database.ibatis.property.parameter.InsertOrUpdatePropertyBean"/>

	<resultMap id="propertyResult" class="property" groupBy="parent,propertyId">
		<result property="parent" column="referenceGuid" typeHandler="variablePrimaryKeyTypeHandler"/>	
		<result property="propertyName" column="propertyName" />	
		<result property="propertyId" column="propertyId" />
		<result property="propertyType" column="propertyType" />
		<result property="language" column="language" />
		<result property="value.content" column="propertyValue" />
		<result property="value.dataType" column="format" />
		<result property="isActive" column="isActive" typeHandler="numericBooleanTypeHandler"/>
		<result property="owner" column="owner" />
		<result property="status" column="status" />
		<result property="effectiveDate" column="effectiveDate" />
		<result property="expirationDate" column="expirationDate" />
		<result property="_sourceList" resultMap="Property.sourceResult"/>
		<result property="_propertyQualifierList" resultMap="Property.qualifierResult"/>
		<result property="_usageContextList" resultMap="Property.usageContextResult"/>
		<result property="entryState" resultMap="Versions.entryStateResult" />
		<discriminator javaType="string" column="propertyType">
			<subMap value="presentation" resultMap="presentationResult" />
			<subMap value="definition" resultMap="definitionResult" />
			<subMap value="comment" resultMap="commentResult" />
		</discriminator>	
	</resultMap>
	
	<resultMap id="propertyAttributes" class="insertOrUpdatePropertyBean" groupBy="uid">
		<result property="uid" column="propertyGuid" typeHandler="variablePrimaryKeyTypeHandler"/>
		<result property="parentUId" column="referenceGuid" typeHandler="variablePrimaryKeyTypeHandler"/>
		<result property="parentType" column="referenceType" />
		<result property="property.propertyId" column="propertyId" />
		<result property="property.propertyType" column="propertyType" />
		<result property="property.propertyName" column="propertyName" />	
		<result property="property.language" column="language" />
		<result property="property.value.dataType" column="format" />
		<result property="isPreferred" column="isPreferred" typeHandler="numericBooleanTypeHandler"/>
		<result property="matchIfNoContext" column="matchIfNoContext" typeHandler="numericBooleanTypeHandler"/>
		<result property="degreeOfFidelity" column="degreeOfFidelity"/>
		<result property="representationalForm" column="representationalForm"/>
		<result property="property.value.content" column="propertyValue" />
		<result property="property.isActive" column="isActive" typeHandler="numericBooleanTypeHandler"/>
		<result property="property.owner" column="owner" />
		<result property="property.status" column="status" />
		<result property="property.effectiveDate" column="effectiveDate" />
		<result property="property.expirationDate" column="expirationDate" />
		<result property="entryStateUId" column="entryStateGuid" typeHandler="variablePrimaryKeyTypeHandler"/>
		<result property="propertyMultiAttribList" resultMap="Property.propertyMultiAttribResultBean"/>
	</resultMap>
	
	<resultMap id="presentationResult" class="presentation" extends="propertyResult" >
		<result property="isPreferred" column="isPreferred" typeHandler="numericBooleanTypeHandler"/>
		<result property="degreeOfFidelity" column="degreeOfFidelity"/>
		<result property="matchIfNoContext" column="matchIfNoContext" typeHandler="numericBooleanTypeHandler"/>
		<result property="representationalForm" column="representationalForm"/>
	</resultMap>
	
	<resultMap id="definitionResult" class="definition" extends="propertyResult" >
		<result property="isPreferred" column="isPreferred" typeHandler="numericBooleanTypeHandler"/>
	</resultMap>
	
	<resultMap id="commentResult" class="comment" extends="propertyResult" />
	
	<select id="getPropertyId" resultMap="Common.uidResult" remapResults="true"
		parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple">
  		SELECT
  			propertyGuid AS uid
  		FROM
  			$prefix$property
  		WHERE
			referenceGuid = #param1,handler=variablePrimaryKeyTypeHandler#
		AND
			propertyId = #param2#
  	</select>
  	
 	<select id="getPropertyUIdByPropIdAndName" resultMap="Common.uidResult" remapResults="true"
		parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTriple">
  		SELECT
  			propertyGuid AS uid
  		FROM
  			$prefix$property
  		WHERE
			referenceGuid = #param1,handler=variablePrimaryKeyTypeHandler#
		AND
			propertyId = #param2#
		AND
			propertyName = #param3#
  	</select>
  	 	
  	<sql id="selectPropertyFragment">
  		SELECT
  			property.propertyGuid,
  			property.referenceGuid,
  			property.referenceType,
  			property.propertyId,
  			property.propertyType,
  			property.propertyName,
  			property.language,
  			property.format,
  			property.isPreferred,
  			property.matchIfNoContext,
  			property.degreeOfFidelity,
  			property.representationalForm,
  			property.propertyValue,
  			property.isActive,
  			property.owner,
  			property.status,
  			property.effectiveDate,
  			property.expirationDate,
  			property.entryStateGuid,
  			entryState.changeType,
  			entryState.relativeOrder,
  			entryState.relativeOrder,
  			
  			currentRevision.revisionId AS currentRevisionId,
  			previousRevision.revisionId AS previousRevisionId,
  			
  			usageContext.attributeValue AS usageContextAttributeValue,
  			
  			source.attributeValue AS sourceAttributeValue,
  			source.subRef AS sourceSubRef,
  			source.role AS sourceRole,
  			
  			qualifier.attributeType AS qualifierAttributeType,
  			qualifier.attributeId AS qualifierAttributeId,
  			qualifier.attributeValue AS qualifierAttributeValue,
  			qualifier.qualifierType AS qualifierType
  			
  		FROM
  			$prefix$property property
  		LEFT JOIN
  			$actualTableSetPrefix$entryState entryState
  		ON
  			property.entryStateGuid =
  			entryState.entryStateGuid	
  		LEFT JOIN
  			${defaultPrefix}revision currentRevision
  		ON
  			entryState.revisionGuid =
  			currentRevision.revisionGuid	
		LEFT JOIN
  			${defaultPrefix}revision previousRevision
  		ON
  			entryState.prevRevisionGuid =
  			previousRevision.revisionGuid	
  	</sql>
  	
  	<sql id="getHistoryPropertyFragment">
  	  	<include refid="selectPropertyFragment"/>
  				
  		LEFT JOIN
  			$prefix$propertyMultiAttrib qualifier
  		ON
  		(
  			property.propertyGuid = qualifier.propertyGuid	
  			AND		
  			qualifier.attributeType = 'qualifier'		
  			AND	
  			qualifier.entryStateGuid = property.entryStateGuid
  		)
  			
  		LEFT JOIN
  			$prefix$propertyMultiAttrib usageContext
  		ON
  		(
  			property.propertyGuid = usageContext.propertyGuid	
  			AND 			
  			usageContext.attributeType = 'usageContext' 			
  			AND 			
  			usageContext.entryStateGuid = property.entryStateGuid
  		)
  			
  		LEFT JOIN
  			$prefix$propertyMultiAttrib source
  		ON
  		(
  			property.propertyGuid = source.propertyGuid		
  			AND	
  			source.attributeType = 'source'	
  			AND	
  			source.entryStateGuid = property.entryStateGuid
  		)		
  	</sql>
  	
  	<sql id="getPropertyFragment">
  	  	<include refid="selectPropertyFragment"/>
  				
  		LEFT JOIN
  			$prefix$propertyMultiAttrib qualifier
  		ON
  		(
  			property.propertyGuid = qualifier.propertyGuid	  			
  			AND 			
  			qualifier.attributeType = 'qualifier'
  		)
  			
  		LEFT JOIN
  			$prefix$propertyMultiAttrib usageContext
  		ON
  		(
  			property.propertyGuid = usageContext.propertyGuid	
  			AND		
  			usageContext.attributeType = 'usageContext'
  		)
  			
  		LEFT JOIN
  			$prefix$propertyMultiAttrib source
  		ON
  		(
  			property.propertyGuid = source.propertyGuid		
  			AND	
  			source.attributeType = 'source'
  		)		
  	</sql>
  	
  	<select id="getPropertiesByParentUids" remapResults="true"
  		resultMap="propertyResult" parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterCollectionTriple">
		<include refid="getPropertyFragment"/>
  		WHERE
			property.referenceType = #param1#
		<isNotEmpty property="param2" prepend="AND">
			property.propertyName IN ( <iterate property="param2" conjunction=",">#param2[]#</iterate> )
		</isNotEmpty>
		
		<isNotEmpty property="param3" prepend="AND">
			property.propertyType IN ( <iterate property="param3" conjunction=",">#param3[]#</iterate> )
		</isNotEmpty>
		
		AND
			property.referenceGuid IN ( <iterate property="param4" conjunction=",">#param4[],handler=variablePrimaryKeyTypeHandler#</iterate> )
		
  	</select>

  	<select id="getPropertiesByParent" remapResults="true"
  		resultMap="propertyResult" parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple">
		<include refid="getPropertyFragment"/>
  		WHERE
			property.referenceType = #param1#
		AND 
			property.referenceGuid = #param2,handler=variablePrimaryKeyTypeHandler#
  	</select>
  	
  	<select id="getPropertyAttributesByUId" remapResults="true"
  		resultMap="propertyAttributes" parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter">
		SELECT 
			prop.propertyGuid,
			prop.referenceGuid,
			prop.referenceType,
			prop.propertyId,
			prop.propertyType,
			prop.propertyName,
			prop.language,
			prop.format,
			prop.isPreferred,
			prop.matchIfNoContext,
			prop.degreeOfFidelity,
			prop.representationalForm,
			prop.propertyValue,
			prop.isActive,
			prop.owner,
			prop.status,
			prop.effectiveDate,
			prop.expirationDate,
			prop.entryStateGuid,
			multiAttrib.propMultiAttribGuid,
			multiAttrib.propertyGuid,
			multiAttrib.attributeType,
			multiAttrib.attributeId,
			multiAttrib.attributeValue,
			multiAttrib.subRef,
			multiAttrib.role,
			multiAttrib.qualifierType,
			multiAttrib.entryStateGuid esGuid
		FROM 
			$prefix$property	prop		
		LEFT JOIN
			$prefix$propertyMultiAttrib multiAttrib
		ON 
			multiAttrib.propertyGuid = prop.propertyGuid			
  		WHERE
			prop.propertyGuid = #param1,handler=variablePrimaryKeyTypeHandler#
  	</select>
  	
  	<select id="getPropertiesByParentAndRevisionId" remapResults="true"
  		resultMap="propertyResult" parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTriple">
		<include refid="getHistoryPropertyFragment"/>
  		WHERE
			property.referenceType = #param1#
		AND 
			property.referenceGuid = #param2,handler=variablePrimaryKeyTypeHandler#
		AND 
			currentRevision.revisionId = #param3#
  	</select>
  	
    <select id="getAllHistoryPropertyIdsByParentUId" remapResults="true"
		parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple"
		resultClass="string">
			SELECT DISTINCT
				propertyGuid
			FROM
				$prefix$property
			WHERE
				referenceGuid = #param1,handler=variablePrimaryKeyTypeHandler#	
	</select>
  	
  	<select id="getPropertyByUidAndRevisionId" remapResults="true"
  		resultMap="propertyResult" parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple">
		<include refid="getHistoryPropertyFragment"/>
  		WHERE
			property.propertyGuid = #param1,handler=variablePrimaryKeyTypeHandler#
		AND 
			currentRevision.revisionId = #param2#
  	</select>
  	
  	<select id="getEntryStateUIdByPropertyUId" remapResults="true"
		parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter"
		resultMap="Common.uidResult">
		SELECT 
			entryStateGuid AS uid
		FROM
			$prefix$property prop
		WHERE
			prop.propertyGuid = #param1,handler=variablePrimaryKeyTypeHandler#	
	</select>
  	
  	<select id="getPropertyByUid" remapResults="true"
  		resultMap="propertyResult" parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter">
		<include refid="getPropertyFragment"/>
  		WHERE
			property.propertyGuid = #param1,handler=variablePrimaryKeyTypeHandler#
  	</select>

	<delete id="deleteCodingSchemePropertiesByCodingSchemeUId" parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple">
		DELETE FROM
			$prefix$property
		WHERE
			referenceType = #param1#
		AND 
			referenceGuid = #param2,handler=variablePrimaryKeyTypeHandler#
	</delete>
	
	<delete id="deleteCodingSchemePropertiesByCodingSchemeUIdUseInnerJoin" parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple">
		DELETE 
			$prefix$property
		FROM 
			$prefix$property
		INNER JOIN
			$prefix$codingScheme
		WHERE
			referenceType = #param1#
		AND
			referenceGuid = codingSchemeGuid
		AND 
			codingSchemeGuid = #param2,handler=variablePrimaryKeyTypeHandler#
	</delete>
	
	<delete id="deleteEntityPropertiesByCodingSchemeUId" parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple">
		DELETE FROM
			$prefix$property
		WHERE
			referenceType = #param1#
		AND 
			referenceGuid
		IN	(
			SELECT 
				entityGuid
			FROM
				$prefix$entity
			WHERE
				codingSchemeGuid = #param2,handler=variablePrimaryKeyTypeHandler#
			)
	</delete>
	
	<delete id="deleteEntityPropertiesByCodingSchemeUIdUseInnerJoin" parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple">
		DELETE 
			$prefix$property
		FROM
			$prefix$property
		INNER JOIN
			$prefix$entity entity
		ON
			referenceGuid = entity.entityGuid
		INNER JOIN
			$prefix$codingScheme cs
		ON
			entity.codingSchemeGuid = cs.codingSchemeGuid
		WHERE
			referenceType = #param1#
		AND 
			cs.codingSchemeGuid = #param2,handler=variablePrimaryKeyTypeHandler#
	</delete>	

	<delete id="deleteRelationPropertiesByCodingSchemeUId" parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple">
		DELETE FROM
			$prefix$property
		WHERE
			referenceType = #param1#
		AND 
			referenceGuid
		IN	(
			SELECT 
				relationGuid
			FROM
				$prefix$relation
			WHERE
				codingSchemeGuid = #param2,handler=variablePrimaryKeyTypeHandler#
			)
	</delete>	
	
	<delete id="deleteRelationPropertiesByCodingSchemeUIdUseInnerJoin" parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple">
		DELETE 
			$prefix$property
		FROM
			$prefix$property
		INNER JOIN
			$prefix$relation rel
		ON
			referenceGuid = rel.relationGuid
		WHERE
			referenceType = #param1#
		AND 
			rel.codingSchemeGuid = #param2,handler=variablePrimaryKeyTypeHandler#
	</delete>
	
	<delete id="deletePropertiesByParentUIdAndParentType" parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple">
		DELETE FROM
			$prefix$property
		WHERE
			referenceType = #param1#
		AND 
			referenceGuid = #param2,handler=variablePrimaryKeyTypeHandler#
	</delete>
	
     <insert id="insertProperty" parameterClass="org.lexevs.dao.database.ibatis.property.parameter.InsertOrUpdatePropertyBean">
		INSERT INTO $prefix$property (
			propertyGuid,
			referenceGuid,
			referenceType,
			propertyId,
			propertyType,
			propertyName,
			language,
			format,
			isPreferred,
			matchIfNoContext,
			degreeOfFidelity,
			representationalForm,
			propertyValue,
			isActive,
			owner,
			status,
			effectiveDate,
			expirationDate,
			entryStateGuid
		) VALUES (
			#uid,handler=variablePrimaryKeyTypeHandler#, 
			#parentUId,handler=variablePrimaryKeyTypeHandler#,
			#parentType#, 
			#property.propertyId:VARCHAR#, 
			#property.propertyType:VARCHAR#,
			#property.propertyName#,
			#property.language:VARCHAR#,
			#property.value.dataType:VARCHAR#,
			#isPreferred,handler=numericBooleanTypeHandler#,
			#matchIfNoContext,handler=numericBooleanTypeHandler#,
			#degreeOfFidelity:VARCHAR#,
			#representationalForm:VARCHAR#,
			#property.value.content:VARCHAR#,	
			#property.isActive,handler=numericBooleanTypeHandler#,
			#property.owner:VARCHAR#,
			#property.status:VARCHAR#,
			#property.effectiveDate:TIMESTAMP#,
			#property.expirationDate:TIMESTAMP#,
			#entryStateUId,handler=variablePrimaryKeyTypeHandler#
		)
  </insert>
  
  <update id="updatePropertyByUId"
  	parameterClass="org.lexevs.dao.database.ibatis.property.parameter.InsertOrUpdatePropertyBean">
  		UPDATE 
			$prefix$property property
		SET 
   		  <dynamic prepend=" ">
   		  	<isNotNull prepend="," property="property.propertyType">
				propertyType = #property.propertyType#
			</isNotNull>
			<isNotNull prepend="," property="property.propertyName">
				propertyName = #property.propertyName#
			</isNotNull>
			<isNotNull prepend="," property="property.language">
				language = #property.language#
			</isNotNull>
			<isNotNull prepend="," property="property.value.dataType">
				format = #property.value.dataType#
			</isNotNull>
			
			<isPropertyAvailable property="property.isPreferred">
				<isNotNull prepend="," property="property.isPreferred">
					isPreferred = #property.isPreferred,handler=numericBooleanTypeHandler#
				</isNotNull>
			</isPropertyAvailable>
			
			<isPropertyAvailable property="property.matchIfNoContext">
				<isNotNull prepend="," property="property.matchIfNoContext">
					matchIfNoContext = #property.matchIfNoContext,handler=numericBooleanTypeHandler#
				</isNotNull>
			</isPropertyAvailable>
			
			<isPropertyAvailable property="property.degreeOfFidelity">
				<isNotNull prepend="," property="property.degreeOfFidelity">
					degreeOfFidelity = #property.degreeOfFidelity#
				</isNotNull>
			</isPropertyAvailable>
			
			<isPropertyAvailable property="property.representationalForm">
				<isNotNull prepend="," property="property.representationalForm">
					representationalForm = #property.representationalForm#
				</isNotNull>
			</isPropertyAvailable>
			
			<isNotNull prepend="," property="property.value.content">
				propertyValue = #property.value.content#
			</isNotNull>
			
			<isNotNull prepend="," property="entryStateUId">
				entryStateGuid = #entryStateUId,handler=variablePrimaryKeyTypeHandler#
			</isNotNull>
		  </dynamic>
		 WHERE
		 	property.propertyGuid = #uid,handler=variablePrimaryKeyTypeHandler#
  </update>
  
  <update id="updatePropertyVersionableAttribByUId"
  	parameterClass="org.lexevs.dao.database.ibatis.property.parameter.InsertOrUpdatePropertyBean">
  		UPDATE 
			$prefix$property property
		SET 
   		  <dynamic prepend=" ">
			<isNotNull prepend="," property="property.isActive">
				isActive = #property.isActive,handler=numericBooleanTypeHandler#
			</isNotNull>
			<isNotNull prepend="," property="property.owner">
				owner = #property.owner#
			</isNotNull>
			<isNotNull prepend="," property="property.status">
				status = #property.status#
			</isNotNull>
			<isNotNull prepend="," property="property.effectiveDate">
				effectiveDate = #property.effectiveDate#
			</isNotNull>
			<isNotNull prepend="," property="property.expirationDate">
				expirationDate = #property.expirationDate#
			</isNotNull>
			<isNotNull prepend="," property="entryStateUId">
				entryStateGuid = #entryStateUId,handler=variablePrimaryKeyTypeHandler#
			</isNotNull>
		  </dynamic>
		 WHERE
		 	property.propertyGuid = #uid,handler=variablePrimaryKeyTypeHandler#
  </update>

	<delete id="deletePropertyByUId"
		parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter">
		DELETE FROM
			$prefix$property
		WHERE
			propertyGuid = #param1,handler=variablePrimaryKeyTypeHandler#
	</delete>

	<select id="getLatestPropertyRevisionIdByUId" remapResults="true"
		parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter"
		resultClass="string">
		SELECT 
			rev.revisionId
		FROM
			$prefix$property prop,
			$prefix$entryState es,
			${defaultPrefix}revision rev
		WHERE
			prop.propertyGuid = #param1,handler=variablePrimaryKeyTypeHandler#	
		AND
			prop.entryStateGuid = es.entryStateGuid	
		AND
			es.revisionGuid = rev.revisionGuid	
	</select>
	
	<!-- 
	<select id="getPrevRevIdFromGivenRevIdForProperty" remapResults="true"
		parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple"
		resultClass="java.util.TreeMap">
		<![CDATA[
			SELECT DISTINCT
				r1.revisionId AS revId,
				r1.revAppliedDate AS revAppliedDate
			FROM
				$prefix$property property,
				$prefix$entryState es,
				${defaultPrefix}revision r1, 
				${defaultPrefix}revision r2			
			WHERE
				property.propertyGuid = #param1,handler=variablePrimaryKeyTypeHandler# AND
				(
					NOT EXISTS 
					(
						SELECT 
							es1.entryStateGuid 
						FROM 
							$prefix$vsEntryState es1 
						WHERE 
							property.entryStateGuid = es1.entryStateGuid
					)
					OR
					(
						property.propertyGuid = es.entryGuid AND 
						es.revisionGuid = r1.revisionGuid AND
						r1.revAppliedDate <= r2.revAppliedDate AND
						r2.revisionID = #param2#
					)
				)
			ORDER BY
				revAppliedDate DESC			
			LIMIT 1
		]]>			
	</select>
	
	<select id="getPropertyFromHistoryByRevision" remapResults="true"
		parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple"
		resultMap="propertyAttributes">
		<![CDATA[
			SELECT 
				prop.propertyGuid,
				prop.referenceGuid,
				prop.referenceType,
				prop.propertyId,
				prop.propertyType,
				prop.propertyName,
				prop.language,
				prop.format,
				prop.isPreferred,
				prop.matchIfNoContext,
				prop.degreeOfFidelity,
				prop.representationalForm,
				prop.propertyValue,
				prop.isActive,
				prop.owner,
				prop.status,
				prop.effectiveDate,
				prop.expirationDate,
				prop.entryStateGuid,
				rev.revAppliedDate revAppliedDate
			FROM 
				$prefix$h_property prop,
				$prefix$entryState es,
				${defaultPrefix}revision rev		
			WHERE
				prop.propertyGuid = #param1,handler=variablePrimaryKeyTypeHandler# AND
				prop.entryStateGuid = es.entryStateGuid AND
				(
					(
						es.revisionGuid = rev.revisionGuid AND						
						rev.revisionID = #param2#
					)
					OR
					(
						es.revisionGuid IS NULL
					)
				)
			ORDER BY
				revAppliedDate DESC		
			LIMIT 1	
		]]>			
	</select>		
	-->     
</sqlMap>