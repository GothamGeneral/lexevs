<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL MAP 2.0//EN" 
	"http://www.ibatis.com/dtd/sql-map-2.dtd">
<sqlMap namespace="PickList">

	<typeAlias alias="pickListDefinition" type="org.LexGrid.valueSets.PickListDefinition" />
	<typeAlias alias="insertPickListDefinitionBean" type="org.lexevs.dao.database.ibatis.valuesets.parameter.InsertPickListDefinitionBean"/>
	
	<resultMap id="pickListDefinitionResult" class="pickListDefinition">
		<result property="pickListId" column="pickListId" />
		<result property="representsValueSetDefinition" column="representsValueSetDefinition" />
		<result property="defaultEntityCodeNamespace" column="defaultEntityCodeNamespace" />
		<result property="defaultLanguage" column="defaultLanguage" />
		<result property="defaultSortOrder" column="defaultSortOrder"/>
		<result property="completeSet" column="completeSet"/>
		<result property="entityDescription.content" column="description" />
		<result property="isActive" column="isActive" />
		<result property="owner" column="owner" />
		<result property="status" column="status" />
		<result property="effectiveDate" column="effectiveDate" />
		<result property="expirationDate" column="expirationDate" />
	</resultMap>
	
	<resultMap id="pickListDefinitionMetaData" class="insertPickListDefinitionBean" groupBy="uid">
		<result property="uid" column="vsPickListGuid" />
		<result property="pickListDefinition.pickListId" column="pickListId" />
		<result property="pickListDefinition.representsValueSetDefinition" column="representsValueSetDefinition" />
		<result property="pickListDefinition.completeSet" column="completeSet"/>
		<result property="pickListDefinition.defaultEntityCodeNamespace" column="defaultEntityCodeNamespace" />
		<result property="pickListDefinition.defaultLanguage" column="defaultLanguage" />
		<result property="pickListDefinition.defaultSortOrder" column="defaultSortOrder"/>		
		<result property="pickListDefinition.entityDescription.content" column="description" />
		<result property="systemReleaseUId" column="releaseGuid" />
		<result property="pickListDefinition.isActive" column="isActive" />
		<result property="pickListDefinition.owner" column="owner" />
		<result property="pickListDefinition.status" column="status" />
		<result property="pickListDefinition.effectiveDate" column="effectiveDate" />
		<result property="pickListDefinition.expirationDate" column="expirationDate" />
		<result property="entryStateUId" column="entryStateGuid" />
	</resultMap>
		
	<resultMap id="pickListDefinitionMetaDataWithMultiAttrib" class="insertPickListDefinitionBean" groupBy="uid">
		<result property="uid" column="vsPickListGuid" />
		<result property="pickListDefinition.pickListId" column="pickListId" />
		<result property="pickListDefinition.representsValueSetDefinition" column="representsValueSetDefinition" />
		<result property="pickListDefinition.completeSet" column="completeSet"/>
		<result property="pickListDefinition.defaultEntityCodeNamespace" column="defaultEntityCodeNamespace" />
		<result property="pickListDefinition.defaultLanguage" column="defaultLanguage" />
		<result property="pickListDefinition.defaultSortOrder" column="defaultSortOrder"/>		
		<result property="pickListDefinition.entityDescription.content" column="description" />
		<result property="systemReleaseUId" column="releaseGuid" />
		<result property="pickListDefinition.isActive" column="isActive" />
		<result property="pickListDefinition.owner" column="owner" />
		<result property="pickListDefinition.status" column="status" />
		<result property="pickListDefinition.effectiveDate" column="effectiveDate" />
		<result property="pickListDefinition.expirationDate" column="expirationDate" />
		<result property="entryStateUId" column="entryStateGuid" />
		<result property="vsMultiAttribList" resultMap="VSMultiAttrib.vsMultiAttribResultBean"/>
	</resultMap>
	
	<select id="getPickListIds" 
		parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" resultClass="string">
		SELECT
			pickListId
		FROM
			$prefix$vsPickList
	</select>
	
	<select id="getPickListGuidByPickListId" 
		parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" 
		resultClass="string">
		SELECT
			vsPickListGuid
		FROM
			$prefix$vsPickList pickListDef
		WHERE
			pickListDef.pickListId = #param1#
	</select>
	
	<select id="getPickListDefinitionMetadataByUId" 		
		parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter"
		resultMap="pickListDefinitionMetaDataWithMultiAttrib">
		SELECT
			pl.vsPickListGuid,
			pl.pickListId,
			pl.representsValueSetDefinition,
			pl.completeSet,
			pl.defaultEntityCodeNamespace,
			pl.defaultLanguage,
			pl.defaultSortOrder,
			pl.description,
			pl.releaseGuid,
			pl.isActive,
			pl.owner,
			pl.status,
			pl.effectiveDate,
			pl.expirationDate,
			pl.entryStateGuid,
			vsMulti.vsMultiAttribGuid,
			vsMulti.referenceGuid,
			vsMulti.referenceType,
			vsMulti.attributeType,
			vsMulti.attributeValue,
			vsMulti.subRef,
			vsMulti.role,
			vsMulti.entryStateGuid esGuid				
		FROM
			$prefix$vsPickList pl
		LEFT JOIN
			$prefix$vsMultiAttrib vsMulti
		ON
			vsMulti.referenceGuid = pl.vsPickListGuid
		WHERE
			pl.vsPickListGuid = #param1#
	</select>
	
	<select id="getPickListEntryNodeGuidByPickListIdAndPLEntryId" 
		parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple" 
		resultClass="string">
		SELECT
			vsPLEntryGuid
		FROM
			$prefix$vsPLEntry
		WHERE
			vsPickListGuid = #param1#
		AND
			plEntryId = #param2#
	</select>
	
	<select id="getPickListDefinitionByPickListId" 
		resultMap="pickListDefinitionResult" 
		parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter">
		SELECT
			pickListDef.pickListId,
			pickListDef.representsValueSetDefinition,
			pickListDef.completeSet,
			pickListDef.defaultEntityCodeNamespace,
			pickListDef.defaultLanguage,
			pickListDef.defaultSortOrder,
			pickListDef.description,			
			pickListDef.isActive,
			pickListDef.owner,
			pickListDef.status,
			pickListDef.effectiveDate,
			pickListDef.expirationDate
		FROM
			$prefix$vsPickList pickListDef
		WHERE
			pickListDef.pickListId = #param1#
	</select>
     
     <select id="getPickListDefinitionIdForValueSetDefinitionUri" 
		resultClass="string" 
		parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter">
		SELECT
			pickListDef.pickListId
		FROM
			$prefix$vsPickList pickListDef
		WHERE
			pickListDef.representsValueSetDefinition = #param1#
	</select>
	
	<select id="getPickListDefinitionIdForEntityCodeAndEntityNamespace" 
		resultClass="string" 
		parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple">
		SELECT
			pickListDef.pickListId
		FROM
			$prefix$vsPickList pickListDef,
			$prefix$vsPLEntry plEntry
		WHERE
			plEntry.entityCode = #param1#
		AND
			plEntry.entityCode = #param2#
		AND
			plEntry.vsPickListGuid = pickListDef.vsPickListGuid
	</select>
	
	<select id="getPickListDefinitionIdForEntityCodeEntityNamespaceAndPropertyId" 
		resultClass="string" 
		parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTriple">
		SELECT
			pickListDef.pickListId
		FROM
			$prefix$vsPickList pickListDef,
			$prefix$vsPLEntry plEntry
		WHERE
			plEntry.entityCode = #param1#
		AND
			plEntry.entityCode = #param2#
		AND
			plEntry.propertyId = #param3#
		AND
			plEntry.vsPickListGuid = pickListDef.vsPickListGuid
	</select>
	
	<insert id="insertPickListDefinition" 
		parameterClass="org.lexevs.dao.database.ibatis.valuesets.parameter.InsertPickListDefinitionBean">
		INSERT INTO $prefix$vsPickList
		(
				vsPickListGuid,
				pickListId,
				representsValueSetDefinition,
				completeSet,
				defaultEntityCodeNamespace,
				defaultLanguage,
				defaultSortOrder,
				description,
				releaseGuid,
				isActive,
				owner,
				status,
				effectiveDate,
				expirationDate,
				entryStateGuid
			) VALUES (
				#uid#,
				#pickListDefinition.pickListId#,
				#pickListDefinition.representsValueSetDefinition#,
				#pickListDefinition.completeSet#,
				#pickListDefinition.defaultEntityCodeNamespace#,
				#pickListDefinition.defaultLanguage#,
				#pickListDefinition.defaultSortOrder#,
				#pickListDefinition.entityDescription.content#,
				#systemReleaseUId#,
				
				<isPropertyAvailable property="pickListDefinition.isActive">
					#pickListDefinition.isActive#,
				</isPropertyAvailable>
				<isNotPropertyAvailable property="pickListDefinition.isActive">
					null,
				</isNotPropertyAvailable>				
				
				#pickListDefinition.owner#,
				#pickListDefinition.status#,
				#pickListDefinition.effectiveDate#,
				#pickListDefinition.expirationDate#,
				#entryStateUId#	
			)
     </insert>

	<delete id="removePickListDefinitionByPickListId" parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter">
		DELETE FROM
			$prefix$vsPickList
		WHERE
			pickListId = #param1#
	</delete>
	
	<delete id="removePickListEntryByPickListGuid" parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter">
		DELETE FROM
			$prefix$vsPLEntry
		WHERE
			vsPickListGuid = #param1#
	</delete>
	
	<update id="updatePickListDefinitionByUId" parameterClass="org.lexevs.dao.database.ibatis.valuesets.parameter.InsertPickListDefinitionBean">
		UPDATE 
			$prefix$vsPickList pickListDef
		SET 
   		  <dynamic prepend=" ">
			<isNotNull prepend="," property="pickListDefinition.representsValueSetDefinition">
				representsValueSetDefinition = #pickListDefinition.representsValueSetDefinition#
			</isNotNull>
			<isNotNull prepend="," property="pickListDefinition.completeSet">
				completeSet = #pickListDefinition.completeSet#
			</isNotNull>
			<isNotNull prepend="," property="pickListDefinition.defaultEntityCodeNamespace">
				defaultEntityCodeNamespace = #pickListDefinition.defaultEntityCodeNamespace#
			</isNotNull>
			<isNotNull prepend="," property="pickListDefinition.defaultLanguage">
				defaultLanguage = #pickListDefinition.defaultLanguage#
			</isNotNull>
			<isNotNull prepend="," property="pickListDefinition.defaultSortOrder">
				defaultSortOrder = #pickListDefinition.defaultSortOrder#
			</isNotNull>
			<isNotNull prepend="," property="pickListDefinition.entityDescription.content">
				description = #pickListDefinition.entityDescription.content#
			</isNotNull>												
			<isNotNull prepend="," property="entryStateUId">
				entryStateGuid = #entryStateUId#
			</isNotNull>
		</dynamic>

		WHERE 
			pickListDef.vsPickListGuid = #uid#
 	</update>

	<update id="updatePLVersionableAttributesByUId" parameterClass="org.lexevs.dao.database.ibatis.valuesets.parameter.InsertPickListDefinitionBean">
		UPDATE 
			$prefix$vsPickList pickListDef
		SET 
   		 <dynamic prepend=" ">
			<isNotNull prepend="," property="pickListDefinition.isActive">
				isActive =
				#pickListDefinition.isActive#
			</isNotNull>
			<isNotNull prepend="," property="pickListDefinition.owner">
				owner = #pickListDefinition.owner#
			</isNotNull>
			<isNotNull prepend="," property="pickListDefinition.status">
				status = #pickListDefinition.status#
			</isNotNull>
			<isNotNull prepend="," property="pickListDefinition.effectiveDate">
				effectiveDate =
				#pickListDefinition.effectiveDate#
			</isNotNull>
			<isNotNull prepend="," property="pickListDefinition.expirationDate">
				expirationDate =
				#pickListDefinition.expirationDate#
			</isNotNull>
			<isNotNull prepend="," property="entryStateUId">
				entryStateGuid = #entryStateUId#
			</isNotNull>
		</dynamic>

		WHERE 
			pickListDef.vsPickListGuid = #uid#
 	</update>
 	
	<select id="getEntryStateUIdByPickListUId" remapResults="true"
		parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter"
		resultClass="string">
		SELECT 
			entryStateGuid
		FROM
			$prefix$vsPickList pl
		WHERE
			pl.vsPickListGuid = #param1#	
	</select>
	
	<update id="updateEntryStateUIdByPickListUId" 
		parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple">
		UPDATE
			$prefix$vsPickList
		SET
			entryStateGuid = #param2#
		WHERE 
			vsPickListGuid = #param1#
 	</update>
 	
	<select id="getPickListDefinitionLatestRevisionIdByUId" remapResults="true"
		parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter"
		resultClass="string">
		SELECT 
			rev.revisionId
		FROM
			$prefix$vsPickList picklist,
			$prefix$vsEntryState es,
			${defaultPrefix}revision rev
		WHERE
			picklist.vsPickListGuid = #param1#	
		AND
			picklist.entryStateGuid = es.entryStateGuid	
		AND
			es.revisionGuid = rev.revisionGuid	
	</select>
	
	<select id="getPrevRevIdFromGivenRevIdForPLDef" remapResults="true"
		parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple"
		resultClass="java.util.TreeMap">
		<![CDATA[
			SELECT DISTINCT
				r1.revisionId AS revId,
				r1.revAppliedDate AS revAppliedDate
			FROM
				$prefix$vsPickList pl,
				$prefix$vsEntryState es,
				${defaultPrefix}revision r1, 
				${defaultPrefix}revision r2			
			WHERE
				pl.pickListId = #param1# AND
				(
					NOT EXISTS 
					(
						SELECT 
							es1.entryStateGuid 
						FROM 
							$prefix$vsEntryState es1 
						WHERE 
							pl.entryStateGuid = es1.entryStateGuid
					)
					OR
					(
						pl.vsPickListGuid = es.entryGuid AND 
						es.revisionGuid = r1.revisionGuid AND
						r1.revAppliedDate <= r2.revAppliedDate AND
						r2.revisionID = #param2#
					)
				)
			ORDER BY
				revAppliedDate DESC			
			LIMIT 1
		]]>			
	</select>

	<select id="getPickListDefinitionMetaDataByRevision" remapResults="true"
		parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple"
		resultMap="pickListDefinitionMetaData">
		<![CDATA[
			SELECT 
				pl.vsPickListGuid,
				pl.pickListId,
				pl.representsValueSetDefinition,
				pl.completeSet,
				pl.defaultEntityCodeNamespace,
				pl.defaultLanguage,
				pl.defaultSortOrder,
				pl.description,
				pl.releaseGuid,
				pl.isActive,
				pl.owner,
				pl.status,
				pl.effectiveDate,
				pl.expirationDate,
				pl.entryStateGuid,
				r1.revAppliedDate as revAppliedDate
			FROM
				$prefix$h_vsPickList pl,
				$prefix$vsEntryState es,
				${defaultPrefix}revision r1,			
				${defaultPrefix}revision r2		
			WHERE
				pl.pickListId = #param1# AND
				pl.entryStateGuid = es.entryStateGuid AND
				(
					(
						es.revisionGuid = r1.revisionGuid AND
						r1.revAppliedDate >= r2.revAppliedDate AND
						r2.revisionID = #param2#
					)
					OR
					(
						es.revisionGuid IS NULL
					)
				)
			Order BY
				revAppliedDate DESC		
			LIMIT 1	
		]]>			
	</select>

	<select id="getPickListEntryNodeListByPickListId" remapResults="true"
		parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter"
		resultClass="string">
			SELECT 
				plEntry.plEntryId
			FROM
				$prefix$vsPickList pl,
				$prefix$vsPLEntry plEntry
			WHERE
				pl.pickListId = #param1# AND
				pl.vsPickListGuid = plEntry.vsPickListGuid
	</select>	

	<select id="getPickListDefinitionPropertyListByPickListId" remapResults="true"
		parameterClass="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter"
		resultClass="string">
			SELECT 
				vsProp.propertyId
			FROM
				$prefix$vsPickList pl,
				$prefix$vsProperty vsProp
			WHERE
				pl.pickListId = #param1# AND
				pl.vsPickListGuid = vsProp.referenceGuid
	</select>		
</sqlMap>