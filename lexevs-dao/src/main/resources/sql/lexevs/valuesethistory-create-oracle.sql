--   -------------------------------------------------- 
--   Generated by Enterprise Architect Version 7.5.850
--   Created On : Friday, 28 May, 2010 
--   DBMS       : Oracle 
--   -------------------------------------------------- 




--  Create Tables 
CREATE TABLE @PREFIX@h_valueSetDefinition
(
	valueSetDefGuid      VARCHAR2(36) NOT NULL,    --  Global unique identifier for the value set def. 
	valueSetDefURI       VARCHAR2(250) NOT NULL,    --  The URI of a given value set definition. 
	valueSetDefName      VARCHAR2(250) NOT NULL,    --  The name of a given value set definition, if any. 
	defaultCodingScheme  VARCHAR2(50),    --  Local name of the primary coding scheme from which the value set definition is drawn. defaultCodingScheme must match a local id of a supportedCodingScheme in the mapping section. 
	conceptDomain        VARCHAR2(200),
	description          CLOB,    --  Description of the content of the value set definition. 
	releaseGuid          VARCHAR2(36),    --  Guid of the system release in which the given value set definition is loaded. This field is a null able field as a value set definition can be loaded alone, with out a system release. 
	isActive             CHAR(1),    --  Boolean value to indicate the given value set definition is active or not. 
	owner                VARCHAR2(250),    --  The owner of the resource. The specific semantics of owner is defined by the busniess rules of the implementor, including the rules of the owner field is absent. 
	status               VARCHAR2(50),    --  The status code associated with the particular resource. The semantics and business rules of entryStatus are defined by the containing system, but there needs to be a mapping into isActive above. 
	effectiveDate        DATE,    --  The date and time that this resource is considered to be active.  To be considered active, isActive must be true, and the temporal context of the operation must be greater than effectiveDate. If omitted, all temporal contexts are considered to be valid. 
	expirationDate       DATE,    --  The date and time that this resource is considered to become inActive.  To be considered active, isActive must be true, and the temporal context of the operation must be less than expirationDate.  If omitted, all temporal contexts are considered to be valid. 
	entryStateGuid       VARCHAR2(36) NOT NULL    --  Holds the reference to the entry state details of the value domain. 
)
;

COMMENT ON TABLE @PREFIX@h_valueSetDefinition IS 'Table holds the value set definitions. A value set definition can be a simple description with no associated value set entries, or it can consist of one or more definitionEntries that resolve to an enumerated list of entityCodes when applied to one or more codingScheme versions.'
;
COMMENT ON COLUMN @PREFIX@h_valueSetDefinition.valueSetDefGuid      IS 'Global unique identifier for the value set def.'
;
COMMENT ON COLUMN @PREFIX@h_valueSetDefinition.valueSetDefURI       IS 'The URI of a given value set definition.'
;
COMMENT ON COLUMN @PREFIX@h_valueSetDefinition.valueSetDefName      IS 'The name of a given value set definition, if any.'
;
COMMENT ON COLUMN @PREFIX@h_valueSetDefinition.defaultCodingScheme  IS 'Local name of the primary coding scheme from which the value set definition is drawn. defaultCodingScheme must match a local id of a supportedCodingScheme in the mapping section.'
;
COMMENT ON COLUMN @PREFIX@h_valueSetDefinition.description          IS 'Description of the content of the value set definition.'
;
COMMENT ON COLUMN @PREFIX@h_valueSetDefinition.releaseGuid          IS 'Guid of the system release in which the given value set definition is loaded. This field is a null able field as a value set definition can be loaded alone, with out a system release.'
;
COMMENT ON COLUMN @PREFIX@h_valueSetDefinition.isActive             IS 'Boolean value to indicate the given value set definition is active or not.'
;
COMMENT ON COLUMN @PREFIX@h_valueSetDefinition.owner                IS 'The owner of the resource. The specific semantics of owner is defined by the busniess rules of the implementor, including the rules of the owner field is absent.'
;
COMMENT ON COLUMN @PREFIX@h_valueSetDefinition.status               IS 'The status code associated with the particular resource. The semantics and business rules of entryStatus are defined by the containing system, but there needs to be a mapping into isActive above.'
;
COMMENT ON COLUMN @PREFIX@h_valueSetDefinition.effectiveDate        IS 'The date and time that this resource is considered to be active.  To be considered active, isActive must be true, and the temporal context of the operation must be greater than effectiveDate. If omitted, all temporal contexts are considered to be valid.'
;
COMMENT ON COLUMN @PREFIX@h_valueSetDefinition.expirationDate       IS 'The date and time that this resource is considered to become inActive.  To be considered active, isActive must be true, and the temporal context of the operation must be less than expirationDate.  If omitted, all temporal contexts are considered to be valid.'
;
COMMENT ON COLUMN @PREFIX@h_valueSetDefinition.entryStateGuid       IS 'Holds the reference to the entry state details of the value domain.'
;

CREATE TABLE @PREFIX@h_vsdEntry
(
	vsdEntryGuid             VARCHAR2(36) NOT NULL,    --  Global unique identifier for the value set definition. 
	valueSetDefGuid          VARCHAR2(36) NOT NULL,
	ruleOrder                NUMBER(18) NOT NULL,    --  The unique identifier of the definition entry within the definition as well as the relative order in which this entry should be applied 
	operator                 VARCHAR2(15) NOT NULL,    --  The operator to apply to this entry.  Default: OR. 
	codingSchemeReference    VARCHAR2(50),    --  A reference to all of the entity codes in a given coding scheme. 
	valueSetDefReference     VARCHAR2(250),    --  A reference to the set of codes defined in another value set definition. 
	entityCode               VARCHAR2(200),    --  The entity code being referenced. 
	entityCodeNamespace      VARCHAR2(50),    --  Local identifier of the namespace of the entityCode. entityCodeNamespace must match a local id of a supportedNamespace in the corresponding mappings section.  If omitted, the URI of the defaultCodingScheme will be used as the URI of the entity code. 
	leafOnly                 CHAR(1),    --  If true and referenceAssociation is supplied and referenceAssociation is defined as transitive, include all entity codes that are "leaves" in  transitive closure of referenceAssociation as applied to entity code. Default: false 
	referenceAssociation     VARCHAR2(50),    --  The local identifier of an association that appears in the native relations collection in the default coding scheme.  This association is used to describe a set of entity codes. If absent, only the entityCode itself is included in this definition. 
	targetToSource           CHAR(1),    --  If true and referenceAssociation is supplied, navigate from entityCode as the association target to the corresponding sources. If transitiveClosure is true and the referenceAssociation is transitive, include all the ancestors in the list rather than just the direct "parents" (sources). 
	transitiveClosure        CHAR(1),    --  If true and referenceAssociation is supplied and referenceAssociation is defined as transitive, include all entity codes that belong to  transitive closure of referenceAssociation as applied to entity code. Default: false 
	propertyRefCodingScheme  VARCHAR2(50),    --  CodingScheme localId to check property reference. 
	propertyName             VARCHAR2(50),
	propertyMatchValue       CLOB,
	matchAlgorithm           VARCHAR2(250),
	format                   VARCHAR2(50),    --  Format of propertyMatchValue. Ex. XML, blob, text etc. 
	isActive                 CHAR(1),    --  Boolean value to indicate the given vsdEntry is active or not. 
	owner                    VARCHAR2(250),    --  The owner of the resource. The specific semantics of owner is defined by the busniess rules of the implementor, including the rules of the owner field is absent. 
	status                   VARCHAR2(50),    --  The status code associated with the particular resource. The semantics and business rules of entryStatus are defined by the containing system, but there needs to be a mapping into isActive above. 
	effectiveDate            DATE,    --  The date and time that this resource is considered to be active.  To be considered active, isActive must be true, and the temporal context of the operation must be greater than effectiveDate. If omitted, all temporal contexts are considered to be valid. 
	expirationDate           DATE,    --  The date and time that this resource is considered to become inActive.  To be considered active, isActive must be true, and the temporal context of the operation must be less than expirationDate.  If omitted, all temporal contexts are considered to be valid. 
	entryStateGuid           VARCHAR2(36) NOT NULL    --  Holds the reference to the entry state details of the plEntry. 
)
;

COMMENT ON TABLE @PREFIX@h_vsdEntry IS 'Table holds the entries of a value set definition. A reference to an entry code, a coding scheme or another value set definition along with the instructions about how the reference is applied. Definition entrys are applied in entryOrder, with each successive entry either adding to or subtracting from the final set of entity codes.'
;
COMMENT ON COLUMN @PREFIX@h_vsdEntry.vsdEntryGuid             IS 'Global unique identifier for the value set definition.'
;
COMMENT ON COLUMN @PREFIX@h_vsdEntry.ruleOrder                IS 'The unique identifier of the definition entry within the definition as well as the relative order in which this entry should be applied'
;
COMMENT ON COLUMN @PREFIX@h_vsdEntry.operator                 IS 'The operator to apply to this entry.  Default: OR.'
;
COMMENT ON COLUMN @PREFIX@h_vsdEntry.codingSchemeReference    IS 'A reference to all of the entity codes in a given coding scheme.'
;
COMMENT ON COLUMN @PREFIX@h_vsdEntry.valueSetDefReference     IS 'A reference to the set of codes defined in another value set definition.'
;
COMMENT ON COLUMN @PREFIX@h_vsdEntry.entityCode               IS 'The entity code being referenced.'
;
COMMENT ON COLUMN @PREFIX@h_vsdEntry.entityCodeNamespace      IS 'Local identifier of the namespace of the entityCode. entityCodeNamespace must match a local id of a supportedNamespace in the corresponding mappings section.  If omitted, the URI of the defaultCodingScheme will be used as the URI of the entity code.'
;
COMMENT ON COLUMN @PREFIX@h_vsdEntry.leafOnly                 IS 'If true and referenceAssociation is supplied and referenceAssociation is defined as transitive, include all entity codes that are "leaves" in  transitive closure of referenceAssociation as applied to entity code. Default: false'
;
COMMENT ON COLUMN @PREFIX@h_vsdEntry.referenceAssociation     IS 'The local identifier of an association that appears in the native relations collection in the default coding scheme.  This association is used to describe a set of entity codes. If absent, only the entityCode itself is included in this definition.'
;
COMMENT ON COLUMN @PREFIX@h_vsdEntry.targetToSource           IS 'If true and referenceAssociation is supplied, navigate from entityCode as the association target to the corresponding sources. If transitiveClosure is true and the referenceAssociation is transitive, include all the ancestors in the list rather than just the direct "parents" (sources).'
;
COMMENT ON COLUMN @PREFIX@h_vsdEntry.transitiveClosure        IS 'If true and referenceAssociation is supplied and referenceAssociation is defined as transitive, include all entity codes that belong to  transitive closure of referenceAssociation as applied to entity code. Default: false'
;
COMMENT ON COLUMN @PREFIX@h_vsdEntry.propertyRefCodingScheme  IS 'CodingScheme localId to check property reference.'
;
COMMENT ON COLUMN @PREFIX@h_vsdEntry.format                   IS 'Format of propertyMatchValue. Ex. XML, blob, text etc.'
;
COMMENT ON COLUMN @PREFIX@h_vsdEntry.isActive                 IS 'Boolean value to indicate the given vsdEntry is active or not.'
;
COMMENT ON COLUMN @PREFIX@h_vsdEntry.owner                    IS 'The owner of the resource. The specific semantics of owner is defined by the busniess rules of the implementor, including the rules of the owner field is absent.'
;
COMMENT ON COLUMN @PREFIX@h_vsdEntry.status                   IS 'The status code associated with the particular resource. The semantics and business rules of entryStatus are defined by the containing system, but there needs to be a mapping into isActive above.'
;
COMMENT ON COLUMN @PREFIX@h_vsdEntry.effectiveDate            IS 'The date and time that this resource is considered to be active.  To be considered active, isActive must be true, and the temporal context of the operation must be greater than effectiveDate. If omitted, all temporal contexts are considered to be valid.'
;
COMMENT ON COLUMN @PREFIX@h_vsdEntry.expirationDate           IS 'The date and time that this resource is considered to become inActive.  To be considered active, isActive must be true, and the temporal context of the operation must be less than expirationDate.  If omitted, all temporal contexts are considered to be valid.'
;
COMMENT ON COLUMN @PREFIX@h_vsdEntry.entryStateGuid           IS 'Holds the reference to the entry state details of the plEntry.'
;

CREATE TABLE @PREFIX@h_vsMultiAttrib
(
	vsMultiAttribGuid  VARCHAR2(36) NOT NULL,    --  Global unique identifier for multi attributes entries. 
	referenceGuid      VARCHAR2(36) NOT NULL,    --  Holds global unique identifier of the model object to which the multi attribute belongs to.  
	referenceType      VARCHAR2(50) NOT NULL,    --  Type of the model object to which a given multi attribute belongs to.  
	attributeType      VARCHAR2(30) NOT NULL,    --  Type of the multi attribute stored. Typically "qualifier" or "source" or "usage context". 
	attributeValue     VARCHAR2(250) NOT NULL,    --  Value of the multi attributes. 
	subRef             VARCHAR2(250),    --  The page, subheading, id or other localized information within the source. Used to make a source reference more precise.  
	role               VARCHAR2(250),    --  The role or purpose of the source for this particular resource (e.g. author, distributor). 
	entryStateGuid     VARCHAR2(36)    --  Holds the reference to the entry state details of the value domain Multi attributes. 
)
;

COMMENT ON TABLE @PREFIX@h_vsMultiAttrib IS 'Table holds the mulit attributes for value domain and pick list model objects(valueSetDef, pickListDef and pickListEntryNode).'
;
COMMENT ON COLUMN @PREFIX@h_vsMultiAttrib.vsMultiAttribGuid  IS 'Global unique identifier for multi attributes entries.'
;
COMMENT ON COLUMN @PREFIX@h_vsMultiAttrib.referenceGuid      IS 'Holds global unique identifier of the model object to which the multi attribute belongs to. '
;
COMMENT ON COLUMN @PREFIX@h_vsMultiAttrib.referenceType      IS 'Type of the model object to which a given multi attribute belongs to. '
;
COMMENT ON COLUMN @PREFIX@h_vsMultiAttrib.attributeType      IS 'Type of the multi attribute stored. Typically "qualifier" or "source" or "usage context".'
;
COMMENT ON COLUMN @PREFIX@h_vsMultiAttrib.attributeValue     IS 'Value of the multi attributes.'
;
COMMENT ON COLUMN @PREFIX@h_vsMultiAttrib.subRef             IS 'The page, subheading, id or other localized information within the source. Used to make a source reference more precise. '
;
COMMENT ON COLUMN @PREFIX@h_vsMultiAttrib.role               IS 'The role or purpose of the source for this particular resource (e.g. author, distributor).'
;
COMMENT ON COLUMN @PREFIX@h_vsMultiAttrib.entryStateGuid     IS 'Holds the reference to the entry state details of the value domain Multi attributes.'
;

CREATE TABLE @PREFIX@h_vsPickList
(
	vsPickListGuid                VARCHAR2(36) NOT NULL,    --  Global unique identifier for the pick list. 
	pickListId                    VARCHAR2(50) NOT NULL,    --  An identifier that uniquely names this list within the context of the collection. 
	representsValueSetDefinition  VARCHAR2(250) NOT NULL,    --  The URI of the value set definition that is represented by this pick list. 
	completeSet                   CHAR(1),    --  True means that this pick list should represent all of the entries in the value set definition.  Any active entry codes that aren't in the specific pick list entries are added to the end, using the designations identified by the defaultLanguage, defaultSortOrder and defaultPickContext.  Default: false 
	defaultEntityCodeNamespace    VARCHAR2(50),    --  Local name of the namespace to which the entry codes in this list belong. defaultEntityCodeNamespace must match a local id of a supportedNamespace in the mappings section. 
	defaultLanguage               VARCHAR2(32),    --  The local identifier of the language that is used to generate the text of this pick list if not otherwise specified. Note that this language does NOT necessarily have any coorelation with the language of a pickListEntry itself or the language of the target user. defaultLanguage must match a local id of a supportedLanguage in the supportedAttributes section. 
	defaultSortOrder              VARCHAR2(50),    --  The local identifier of a sort order that is used as the default in the definition of the pick list. 
	description                   CLOB,    --  Description of the content of the pick list. 
	releaseGuid                   VARCHAR2(36),    --  Guid of the system release in which the given pick list is loaded. This field is a null able field as a pick list can be loaded alone, with out a system release. 
	isActive                      CHAR(1),    --  Boolean value to indicate the given pick list is active or not. 
	owner                         VARCHAR2(250),    --  The owner of the resource. The specific semantics of owner is defined by the busniess rules of the implementor, including the rules of the owner field is absent. 
	status                        VARCHAR2(50),    --  The status code associated with the particular resource. The semantics and business rules of entryStatus are defined by the containing system, but there needs to be a mapping into isActive above. 
	effectiveDate                 DATE,    --  The date and time that this resource is considered to be active.  To be considered active, isActive must be true, and the temporal context of the operation must be greater than effectiveDate. If omitted, all temporal contexts are considered to be valid. 
	expirationDate                DATE,    --  The date and time that this resource is considered to become inActive.  To be considered active, isActive must be true, and the temporal context of the operation must be less than expirationDate.  If omitted, all temporal contexts are considered to be valid. 
	entryStateGuid                VARCHAR2(36) NOT NULL    --  Holds the reference to the entry state details of the pick list. 
)
;

COMMENT ON TABLE @PREFIX@h_vsPickList IS 'Table holds the Pick List entries. Pick List is an ordered list of entity codes and corresponding presentations drawn from a value set definition.'
;
COMMENT ON COLUMN @PREFIX@h_vsPickList.vsPickListGuid                IS 'Global unique identifier for the pick list.'
;
COMMENT ON COLUMN @PREFIX@h_vsPickList.pickListId                    IS 'An identifier that uniquely names this list within the context of the collection.'
;
COMMENT ON COLUMN @PREFIX@h_vsPickList.representsValueSetDefinition  IS 'The URI of the value set definition that is represented by this pick list.'
;
COMMENT ON COLUMN @PREFIX@h_vsPickList.completeSet                   IS 'True means that this pick list should represent all of the entries in the value set definition.  Any active entry codes that aren''t in the specific pick list entries are added to the end, using the designations identified by the defaultLanguage, defaultSortOrder and defaultPickContext.  Default: false'
;
COMMENT ON COLUMN @PREFIX@h_vsPickList.defaultEntityCodeNamespace    IS 'Local name of the namespace to which the entry codes in this list belong. defaultEntityCodeNamespace must match a local id of a supportedNamespace in the mappings section.'
;
COMMENT ON COLUMN @PREFIX@h_vsPickList.defaultLanguage               IS 'The local identifier of the language that is used to generate the text of this pick list if not otherwise specified. Note that this language does NOT necessarily have any coorelation with the language of a pickListEntry itself or the language of the target user. defaultLanguage must match a local id of a supportedLanguage in the supportedAttributes section.'
;
COMMENT ON COLUMN @PREFIX@h_vsPickList.defaultSortOrder              IS 'The local identifier of a sort order that is used as the default in the definition of the pick list.'
;
COMMENT ON COLUMN @PREFIX@h_vsPickList.description                   IS 'Description of the content of the pick list.'
;
COMMENT ON COLUMN @PREFIX@h_vsPickList.releaseGuid                   IS 'Guid of the system release in which the given pick list is loaded. This field is a null able field as a pick list can be loaded alone, with out a system release.'
;
COMMENT ON COLUMN @PREFIX@h_vsPickList.isActive                      IS 'Boolean value to indicate the given pick list is active or not.'
;
COMMENT ON COLUMN @PREFIX@h_vsPickList.owner                         IS 'The owner of the resource. The specific semantics of owner is defined by the busniess rules of the implementor, including the rules of the owner field is absent.'
;
COMMENT ON COLUMN @PREFIX@h_vsPickList.status                        IS 'The status code associated with the particular resource. The semantics and business rules of entryStatus are defined by the containing system, but there needs to be a mapping into isActive above.'
;
COMMENT ON COLUMN @PREFIX@h_vsPickList.effectiveDate                 IS 'The date and time that this resource is considered to be active.  To be considered active, isActive must be true, and the temporal context of the operation must be greater than effectiveDate. If omitted, all temporal contexts are considered to be valid.'
;
COMMENT ON COLUMN @PREFIX@h_vsPickList.expirationDate                IS 'The date and time that this resource is considered to become inActive.  To be considered active, isActive must be true, and the temporal context of the operation must be less than expirationDate.  If omitted, all temporal contexts are considered to be valid.'
;
COMMENT ON COLUMN @PREFIX@h_vsPickList.entryStateGuid                IS 'Holds the reference to the entry state details of the pick list.'
;

CREATE TABLE @PREFIX@h_vsPLEntry
(
	vsPLEntryGuid        VARCHAR2(36) NOT NULL,    --  Global unique identifier for the pick list entry. 
	vsPickListGuid       VARCHAR2(36) NOT NULL,    --  Foreign key to the corresponding pick list definition. 
	plEntryId            VARCHAR2(50) NOT NULL,    --  Unique identifier of the pick list node within the list. 
	entityCodeNamespace  VARCHAR2(50),    --  Local identifier of the namespace of the entity code if different than the pickListDefinition defaultEntityCodeNamespace. entityCodeNamespace must match a local id of a supportedNamespace in the mappings section. 
	entityCode           VARCHAR2(200) NOT NULL,    --  The entry code that this entry represents, if any. If not present, this entry is not selectable. 
	entryOrder           NUMBER(18),    --  Relative order of this entry in the list.  If absent, this entry follows any ordered entries, but is unordered beyond that 
	isDefault            CHAR(1),    --  True means that this is the default entry for the supplied language and context. 
	matchIfNoContext     CHAR(1),    --  True means that this entry can be used if no contexts are supplied, even though pickContext ispresent. 
	propertyId           VARCHAR2(50),    --  The property identifier associated with the entityCode and entityCodeNamespace that the pickText was derived from.  If absent, the pick text can be anything. Some terminologies may have business rules requiring this attribute to be present. 
	language             VARCHAR2(32),    --  The local name of the language to be used when the application/user supplies a selection language matches. If absent, this matches all languages. language must match a local id od of a supportedLanguage in the mappings section. 
	include              CHAR(1),    --  Boolean value to indicate the given PL entry node has to be included or not when the pick list is resolved. 
	pickText             CLOB,    --  The text that represents this node in the pick list. Some business rules may require that this string match a presentation associated with the entityCode. 
	isActive             CHAR(1),    --  Boolean value to indicate the given PL entry is active or not. 
	owner                VARCHAR2(250),    --  The owner of the resource. The specific semantics of owner is defined by the busniess rules of the implementor, including the rules of the owner field is absent. 
	status               VARCHAR2(50),    --  The status code associated with the particular resource. The semantics and business rules of entryStatus are defined by the containing system, but there needs to be a mapping into isActive above. 
	effectiveDate        DATE,    --  The date and time that this resource is considered to be active.  To be considered active, isActive must be true, and the temporal context of the operation must be greater than effectiveDate. If omitted, all temporal contexts are considered to be valid. 
	expirationDate       DATE,    --  The date and time that this resource is considered to become inActive.  To be considered active, isActive must be true, and the temporal context of the operation must be less than expirationDate.  If omitted, all temporal contexts are considered to be valid. 
	entryStateGuid       VARCHAR2(36) NOT NULL    --  Holds the reference to the entry state details of the pick list entry. 
)
;

COMMENT ON TABLE @PREFIX@h_vsPLEntry IS 'Table holds the entries of a Pick List. An inclusion (logical model object : pickListEntry) or exclusion (logical model object : pickListEntryExclusion) in a pick list definition.'
;
COMMENT ON COLUMN @PREFIX@h_vsPLEntry.vsPLEntryGuid        IS 'Global unique identifier for the pick list entry.'
;
COMMENT ON COLUMN @PREFIX@h_vsPLEntry.vsPickListGuid       IS 'Foreign key to the corresponding pick list definition.'
;
COMMENT ON COLUMN @PREFIX@h_vsPLEntry.plEntryId            IS 'Unique identifier of the pick list node within the list.'
;
COMMENT ON COLUMN @PREFIX@h_vsPLEntry.entityCodeNamespace  IS 'Local identifier of the namespace of the entity code if different than the pickListDefinition defaultEntityCodeNamespace. entityCodeNamespace must match a local id of a supportedNamespace in the mappings section.'
;
COMMENT ON COLUMN @PREFIX@h_vsPLEntry.entityCode           IS 'The entry code that this entry represents, if any. If not present, this entry is not selectable.'
;
COMMENT ON COLUMN @PREFIX@h_vsPLEntry.entryOrder           IS 'Relative order of this entry in the list.  If absent, this entry follows any ordered entries, but is unordered beyond that'
;
COMMENT ON COLUMN @PREFIX@h_vsPLEntry.isDefault            IS 'True means that this is the default entry for the supplied language and context.'
;
COMMENT ON COLUMN @PREFIX@h_vsPLEntry.matchIfNoContext     IS 'True means that this entry can be used if no contexts are supplied, even though pickContext ispresent.'
;
COMMENT ON COLUMN @PREFIX@h_vsPLEntry.propertyId           IS 'The property identifier associated with the entityCode and entityCodeNamespace that the pickText was derived from.  If absent, the pick text can be anything. Some terminologies may have business rules requiring this attribute to be present.'
;
COMMENT ON COLUMN @PREFIX@h_vsPLEntry.language             IS 'The local name of the language to be used when the application/user supplies a selection language matches. If absent, this matches all languages. language must match a local id od of a supportedLanguage in the mappings section.'
;
COMMENT ON COLUMN @PREFIX@h_vsPLEntry.include              IS 'Boolean value to indicate the given PL entry node has to be included or not when the pick list is resolved.'
;
COMMENT ON COLUMN @PREFIX@h_vsPLEntry.pickText             IS 'The text that represents this node in the pick list. Some business rules may require that this string match a presentation associated with the entityCode.'
;
COMMENT ON COLUMN @PREFIX@h_vsPLEntry.isActive             IS 'Boolean value to indicate the given PL entry is active or not.'
;
COMMENT ON COLUMN @PREFIX@h_vsPLEntry.owner                IS 'The owner of the resource. The specific semantics of owner is defined by the busniess rules of the implementor, including the rules of the owner field is absent.'
;
COMMENT ON COLUMN @PREFIX@h_vsPLEntry.status               IS 'The status code associated with the particular resource. The semantics and business rules of entryStatus are defined by the containing system, but there needs to be a mapping into isActive above.'
;
COMMENT ON COLUMN @PREFIX@h_vsPLEntry.effectiveDate        IS 'The date and time that this resource is considered to be active.  To be considered active, isActive must be true, and the temporal context of the operation must be greater than effectiveDate. If omitted, all temporal contexts are considered to be valid.'
;
COMMENT ON COLUMN @PREFIX@h_vsPLEntry.expirationDate       IS 'The date and time that this resource is considered to become inActive.  To be considered active, isActive must be true, and the temporal context of the operation must be less than expirationDate.  If omitted, all temporal contexts are considered to be valid.'
;
COMMENT ON COLUMN @PREFIX@h_vsPLEntry.entryStateGuid       IS 'Holds the reference to the entry state details of the pick list entry.'
;

CREATE TABLE @PREFIX@h_vsProperty
(
	vsPropertyGuid        VARCHAR2(36) NOT NULL,    --  Global unique identifier for the property. 
	referenceGuid         VARCHAR2(36) NOT NULL,    --  Guid of the model object to which a given property belongs to. 
	referenceType         VARCHAR2(50) NOT NULL,    --  Type of the model object to which a given property belongs to. Namely, entity, codingScheme etc. 
	propertyId            VARCHAR2(50),    --  A unique identifier of this particular propert/resource/value instance. 
	propertyType          VARCHAR2(15),    --  The LexGrid model element that this property represents.  As an example, the codingScheme "copyright" attribute could be represented by a property with a propertyType that mapped to lgCS:copyRight. Must match a local id of a supportedPropertyType in the corresponding mappings section. 
	propertyName          VARCHAR2(50) NOT NULL,    --  The local identifier that defines the meaning of this particular property entry. Must match a local id of a supportedProperty in the corresponding supportedAttributes section. 
	language              VARCHAR2(32),    --  The local identifier of the language of the property value. Must match a local id of a supportedLanguage in the corresponding mappings section. If omitted, and language is applicable to this property, the defaultLanguage of the surrounding resource is used. 
	format                VARCHAR2(50),    --  Data type format of the property value. 
	isPreferred           CHAR(1),    --  True means that, if the text meets the selection criteria, it should be the preferred form. For a given language there should be only one preferred presentation. 
	matchIfNoContext      CHAR(1),    --  True means that this presentation is valid in a acontextual setting - that it is always valid in the given language.  Default: true  if there are no property usageContexts, false otherwise. 
	degreeOfFidelity      VARCHAR2(50),    --  A local identifier that states how closely a term approximates the intended meaning of an entry code. degreeOfFidelity must match a local id of a supportedDegreeOfFidelity in the corresponding mappings section. 
	representationalForm  VARCHAR2(50),    --  A local identifier that states how the term represents the concept (abbrev, acronym, etc.) representationalForm must match a local id of a representationalForm in the corresponding mappings section. 
	propertyValue         CLOB NOT NULL,    --  The value of the property associated with this particular resource.  Note that "text" may be any type, including a URI, html fragment, etc. 
	isActive              CHAR(1),    --  Boolean value to indicate the given property is active or not. 
	owner                 VARCHAR2(250),    --  The owner of the resource. The specific semantics of owner is defined by the busniess rules of the implementor, including the rules of the owner field is absent. 
	status                VARCHAR2(50),    --  The status code associated with the particular resource. The semantics and business rules of entryStatus are defined by the containing system, but there needs to be a mapping into isActive above. 
	effectiveDate         DATE,    --  The date and time that this resource is considered to be active.  To be considered active, isActive must be true, and the temporal context of the operation must be greater than effectiveDate. If omitted, all temporal contexts are considered to be valid. 
	expirationDate        DATE,    --  The date and time that this resource is considered to become inActive.  To be considered active, isActive must be true, and the temporal context of the operation must be less than expirationDate.  If omitted, all temporal contexts are considered to be valid. 
	entryStateGuid        VARCHAR2(36) NOT NULL    --  Holds the reference to the entry state details of the given property. 
)
;

COMMENT ON TABLE @PREFIX@h_vsProperty IS 'Table holds the collection of properties belonging to value set and pick list definitions. '
;
COMMENT ON COLUMN @PREFIX@h_vsProperty.vsPropertyGuid        IS 'Global unique identifier for the property.'
;
COMMENT ON COLUMN @PREFIX@h_vsProperty.referenceGuid         IS 'Guid of the model object to which a given property belongs to.'
;
COMMENT ON COLUMN @PREFIX@h_vsProperty.referenceType         IS 'Type of the model object to which a given property belongs to. Namely, entity, codingScheme etc.'
;
COMMENT ON COLUMN @PREFIX@h_vsProperty.propertyId            IS 'A unique identifier of this particular propert/resource/value instance.'
;
COMMENT ON COLUMN @PREFIX@h_vsProperty.propertyType          IS 'The LexGrid model element that this property represents.  As an example, the codingScheme "copyright" attribute could be represented by a property with a propertyType that mapped to lgCS:copyRight. Must match a local id of a supportedPropertyType in the corresponding mappings section.'
;
COMMENT ON COLUMN @PREFIX@h_vsProperty.propertyName          IS 'The local identifier that defines the meaning of this particular property entry. Must match a local id of a supportedProperty in the corresponding supportedAttributes section.'
;
COMMENT ON COLUMN @PREFIX@h_vsProperty.language              IS 'The local identifier of the language of the property value. Must match a local id of a supportedLanguage in the corresponding mappings section. If omitted, and language is applicable to this property, the defaultLanguage of the surrounding resource is used.'
;
COMMENT ON COLUMN @PREFIX@h_vsProperty.format                IS 'Data type format of the property value.'
;
COMMENT ON COLUMN @PREFIX@h_vsProperty.isPreferred           IS 'True means that, if the text meets the selection criteria, it should be the preferred form. For a given language there should be only one preferred presentation.'
;
COMMENT ON COLUMN @PREFIX@h_vsProperty.matchIfNoContext      IS 'True means that this presentation is valid in a acontextual setting - that it is always valid in the given language.  Default: true  if there are no property usageContexts, false otherwise.'
;
COMMENT ON COLUMN @PREFIX@h_vsProperty.degreeOfFidelity      IS 'A local identifier that states how closely a term approximates the intended meaning of an entry code. degreeOfFidelity must match a local id of a supportedDegreeOfFidelity in the corresponding mappings section.'
;
COMMENT ON COLUMN @PREFIX@h_vsProperty.representationalForm  IS 'A local identifier that states how the term represents the concept (abbrev, acronym, etc.) representationalForm must match a local id of a representationalForm in the corresponding mappings section.'
;
COMMENT ON COLUMN @PREFIX@h_vsProperty.propertyValue         IS 'The value of the property associated with this particular resource.  Note that "text" may be any type, including a URI, html fragment, etc.'
;
COMMENT ON COLUMN @PREFIX@h_vsProperty.isActive              IS 'Boolean value to indicate the given property is active or not.'
;
COMMENT ON COLUMN @PREFIX@h_vsProperty.owner                 IS 'The owner of the resource. The specific semantics of owner is defined by the busniess rules of the implementor, including the rules of the owner field is absent.'
;
COMMENT ON COLUMN @PREFIX@h_vsProperty.status                IS 'The status code associated with the particular resource. The semantics and business rules of entryStatus are defined by the containing system, but there needs to be a mapping into isActive above.'
;
COMMENT ON COLUMN @PREFIX@h_vsProperty.effectiveDate         IS 'The date and time that this resource is considered to be active.  To be considered active, isActive must be true, and the temporal context of the operation must be greater than effectiveDate. If omitted, all temporal contexts are considered to be valid.'
;
COMMENT ON COLUMN @PREFIX@h_vsProperty.expirationDate        IS 'The date and time that this resource is considered to become inActive.  To be considered active, isActive must be true, and the temporal context of the operation must be less than expirationDate.  If omitted, all temporal contexts are considered to be valid.'
;
COMMENT ON COLUMN @PREFIX@h_vsProperty.entryStateGuid        IS 'Holds the reference to the entry state details of the given property.'
;

CREATE TABLE @PREFIX@h_vsPropertyMultiAttrib
(
	vsPropMultiAttribGuid  VARCHAR2(36) NOT NULL,    --  Global unique identifier for multi attributes entries. 
	vsPropertyGuid         VARCHAR2(36) NOT NULL,    --  Foreign key to the corresponding property. 
	attributeType          VARCHAR2(30) NOT NULL,    --  Type of the multi attribute stored. Typically "qualifier" or "source" or "usage context". 
	attributeId            VARCHAR2(50),    --  Name of the property qualifier. In case of source and usage context value will be null. 
	attributeValue         VARCHAR2(250) NOT NULL,    --  Value of the multi attributes. 
	subRef                 VARCHAR2(250),    --  The page, subheading, id or other localized information within the source. Used to make a source reference more precise.  
	role                   VARCHAR2(250),    --  The role or purpose of the source for this particular resource (e.g. author, distributor). 
	qualifierType          VARCHAR2(250),    --  Qualifier type of a property. 
	entryStateGuid         VARCHAR2(36)    --  Holds the reference to the entry state details of the value domain property Multi attributes. 
)
;

COMMENT ON TABLE @PREFIX@h_vsPropertyMultiAttrib IS 'Table holds the property mulit attributes like qualifiers, sources and usage contexts for a given property.'
;
COMMENT ON COLUMN @PREFIX@h_vsPropertyMultiAttrib.vsPropMultiAttribGuid  IS 'Global unique identifier for multi attributes entries.'
;
COMMENT ON COLUMN @PREFIX@h_vsPropertyMultiAttrib.vsPropertyGuid         IS 'Foreign key to the corresponding property.'
;
COMMENT ON COLUMN @PREFIX@h_vsPropertyMultiAttrib.attributeType          IS 'Type of the multi attribute stored. Typically "qualifier" or "source" or "usage context".'
;
COMMENT ON COLUMN @PREFIX@h_vsPropertyMultiAttrib.attributeId            IS 'Name of the property qualifier. In case of source and usage context value will be null.'
;
COMMENT ON COLUMN @PREFIX@h_vsPropertyMultiAttrib.attributeValue         IS 'Value of the multi attributes.'
;
COMMENT ON COLUMN @PREFIX@h_vsPropertyMultiAttrib.subRef                 IS 'The page, subheading, id or other localized information within the source. Used to make a source reference more precise. '
;
COMMENT ON COLUMN @PREFIX@h_vsPropertyMultiAttrib.role                   IS 'The role or purpose of the source for this particular resource (e.g. author, distributor).'
;
COMMENT ON COLUMN @PREFIX@h_vsPropertyMultiAttrib.qualifierType          IS 'Qualifier type of a property.'
;
COMMENT ON COLUMN @PREFIX@h_vsPropertyMultiAttrib.entryStateGuid         IS 'Holds the reference to the entry state details of the value domain property Multi attributes.'
;


--  Create Primary Key Constraints 
ALTER TABLE @PREFIX@h_valueSetDefinition ADD CONSTRAINT PK_h_valueSetDef 
	PRIMARY KEY (entryStateGuid)
;

ALTER TABLE @PREFIX@h_vsdEntry ADD CONSTRAINT PK_h_vsdEntry 
	PRIMARY KEY (entryStateGuid)
;

ALTER TABLE @PREFIX@h_vsPickList ADD CONSTRAINT PK_h_vsPickList 
	PRIMARY KEY (entryStateGuid)
;

ALTER TABLE @PREFIX@h_vsPLEntry ADD CONSTRAINT PK_h_vsPLEntry 
	PRIMARY KEY (entryStateGuid)
;

ALTER TABLE @PREFIX@h_vsProperty ADD CONSTRAINT PK_h_vsProperty 
	PRIMARY KEY (entryStateGuid)
;


--  Create Indexes 
CREATE INDEX idx_h_vsdName ON @PREFIX@h_valueSetDefinition
(valueSetDefName ASC)
;

CREATE INDEX idx_h_vsdURI ON @PREFIX@h_valueSetDefinition
(valueSetDefURI ASC)
;

CREATE INDEX idx_h_valueSetDefGuid ON @PREFIX@h_vsdEntry
(valueSetDefGuid ASC)
;

CREATE INDEX idx_h_vsdEnt_entityCode ON @PREFIX@h_vsdEntry
(entityCode ASC)
;

CREATE INDEX idx_h_pickListId ON @PREFIX@h_vsPickList
(pickListId ASC)
;

CREATE INDEX idx_h_representsVSD ON @PREFIX@h_vsPickList
(representsValueSetDefinition ASC)
;

CREATE INDEX idx_h_vsPickListGuid ON @PREFIX@h_vsPLEntry
(vsPickListGuid ASC)
;

CREATE INDEX idx_h_entityCode ON @PREFIX@h_vsPLEntry
(entityCode ASC)
;

CREATE INDEX idx_h_vsProperty ON @PREFIX@h_vsProperty
(referenceGuid ASC, propertyId ASC, propertyName ASC)
;

CREATE INDEX idx_h_vsPropertyGuid ON @PREFIX@h_vsPropertyMultiAttrib
(vsPropertyGuid ASC)
;


--  Create Foreign Key Constraints 
ALTER TABLE @PREFIX@h_valueSetDefinition ADD CONSTRAINT FK_h_valueSetDef_systemRelease 
	FOREIGN KEY (releaseGuid) REFERENCES @PREFIX@systemRelease (releaseGuid)
;

ALTER TABLE @PREFIX@h_valueSetDefinition ADD CONSTRAINT FK_h_valueSetDef_valueSetDefin 
	FOREIGN KEY (valueSetDefGuid) REFERENCES @PREFIX@valueSetDefinition (valueSetDefGuid)
ON DELETE CASCADE
;

ALTER TABLE @PREFIX@h_vsdEntry ADD CONSTRAINT FK_h_vsdEntry_vsdEntry 
	FOREIGN KEY (vsdEntryGuid) REFERENCES @PREFIX@vsdEntry (vsdEntryGuid)
ON DELETE CASCADE
;

ALTER TABLE @PREFIX@h_vsMultiAttrib ADD CONSTRAINT FK_h_vsMultiAttr_vsMultiAttrib 
	FOREIGN KEY (vsMultiAttribGuid) REFERENCES @PREFIX@vsMultiAttrib (vsMultiAttribGuid)
ON DELETE CASCADE
;

ALTER TABLE @PREFIX@h_vsPickList ADD CONSTRAINT FK_h_vsPickList_systemRelease 
	FOREIGN KEY (releaseGuid) REFERENCES @PREFIX@systemRelease (releaseGuid)
;

ALTER TABLE @PREFIX@h_vsPickList ADD CONSTRAINT FK_h_vsPickList_vsPickList 
	FOREIGN KEY (vsPickListGuid) REFERENCES @PREFIX@vsPickList (vsPickListGuid)
ON DELETE CASCADE
;

ALTER TABLE @PREFIX@h_vsPLEntry ADD CONSTRAINT FK_h_vsPLEntry_vsPLEntry 
	FOREIGN KEY (vsPLEntryGuid) REFERENCES @PREFIX@vsPLEntry (vsPLEntryGuid)
ON DELETE CASCADE
;

ALTER TABLE @PREFIX@h_vsProperty ADD CONSTRAINT FK_h_vsProperty_vsProperty 
	FOREIGN KEY (vsPropertyGuid) REFERENCES @PREFIX@vsProperty (vsPropertyGuid)
ON DELETE CASCADE
;

ALTER TABLE @PREFIX@h_vsPropertyMultiAttrib ADD CONSTRAINT FK_h_vsPropertyM_vsPropertyMul 
	FOREIGN KEY (vsPropMultiAttribGuid) REFERENCES @PREFIX@vsPropertyMultiAttrib (vsPropMultiAttribGuid)
ON DELETE CASCADE
;
