<project name="lgUtil" default="all" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">
	<description>
		Buildfile for lgUtility.
	</description>
	
	<ivy:settings file="../lbPackager/ivysettings.xml"/>
	<property file="build.properties"/>
		
	<!-- set global properties for this build -->
	<property name="src"   		location="src"/>
	<property name="antBuild" 	location="antBuild"/>
	<property name="classes" 	location="${antBuild}/classes"/>
	<property name="dist"  		location="dist"/>
	<property name="lgSharedLibraries" location="../lgSharedLibraries"/>
	<property name="lib.dir" value="lib"/>

	<!--Sets up the classpath-->
	<target name="init">
		<!-- Ivy Properties -->
				<property name="ivy.dir" location="../lbPackager/ivy"/>
				<property name="ivy.jar.dir" location="${ivy.dir}/lib"/>
				
				<!-- <property name="ivy.ibiblio.default.artifact.root" value="http://bmidev4:8282/nexus-webapp-1.3.3/content/repositories/bmidev-internal-snapshots/" /> -->
			
				<!-- NOTE: I used to just do this at parse time, but there is a bug in Ant versions < 1.7 
				     with classloaders on taskdefs not getting reclaimed after subant calls, and we would 
				     get OutOfMemory PermGen space.  Such taskdefs live across subant calls, so I only do this once now.
				-->
				
				<path id="ivy.lib.path">
				    <fileset dir="${ivy.jar.dir}">
				        <include name="ivy-*.jar" />
				    </fileset>
				</path>
				
				<taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path" loaderRef="ivy.loader" />
		<property name="ivy.initialized" location="true" />
		
		<tstamp/>
		<echo>Constructing classpath</echo>
		<path id="classpath">
			<fileset dir="${lib.dir}" id="libs">
				<include name="*.jar"/>	
			</fileset>
		</path>
	</target>

	<target name="clean" depends="init" description="clean up" >
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${dist}"/>
		<delete dir="${antBuild}"/>
	</target>

	<target name="compile" depends="init" description="compile the source ">
		<mkdir dir="${classes}"/>
		<!-- Compile the java code from ${src} into ${classes} -->
		<javac source="1.5" target="1.5" debug="true" srcdir="${src}" destdir="${classes}">
			<classpath refid="classpath"/>
		</javac>
	</target>

	<target name="jar" depends="init, compile" description="generate the jar file" >
		<!-- Create the distribution directory -->
		<mkdir dir="${dist}"/>
		<!-- Put everything in ${build} into .jar file -->
		<jar jarfile="${dist}/${ant.project.name}.jar" basedir="${classes}">
			<manifest>
				<attribute name="Build-Date" value="${DSTAMP} ${TSTAMP}"/>
			</manifest>
		</jar>
	</target>
	
	<target name="resolve" depends="init" description="--> retrieve dependencies with ivy">
			<ivy:retrieve />
	    </target>
		
		<target name="publish">
			<ivy:publish resolver="ncicb-chain" pubrevision="${build.version}" overwrite="true">
		  	 <artifacts pattern="${dist}/[artifact].[ext]" />
			</ivy:publish>
		</target>
		
	<target name="all" depends="init, clean, resolve, compile, jar, publish" description="Full Build"/>
</project>
